<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="Generator" content="Microsoft Word 15 (filtered)"><style id="dynCom" type="text/css"><!-- --></style><script language="JavaScript"><!--function msoCommentShow(anchor_id, com_id){	if(msoBrowserCheck()) 		{		c = document.all(com_id);		a = document.all(anchor_id);		if (null != c && null == c.length && null != a && null == a.length)			{			var cw = c.offsetWidth;			var ch = c.offsetHeight;			var aw = a.offsetWidth;			var ah = a.offsetHeight;			var x  = a.offsetLeft;			var y  = a.offsetTop;			var el = a;			while (el.tagName != "BODY") 				{				el = el.offsetParent;				x = x + el.offsetLeft;				y = y + el.offsetTop;				}			var bw = document.body.clientWidth;			var bh = document.body.clientHeight;			var bsl = document.body.scrollLeft;			var bst = document.body.scrollTop;			if (x + cw + ah / 2 > bw + bsl && x + aw - ah / 2 - cw >= bsl ) 				{ c.style.left = x + aw - ah / 2 - cw; }			else 				{ c.style.left = x + ah / 2; }			if (y + ch + ah / 2 > bh + bst && y + ah / 2 - ch >= bst ) 				{ c.style.top = y + ah / 2 - ch; }			else 				{ c.style.top = y + ah / 2; }			c.style.visibility = "visible";}	}	}function msoCommentHide(com_id) {	if(msoBrowserCheck())		{		c = document.all(com_id);		if (null != c && null == c.length)		{		c.style.visibility = "hidden";		c.style.left = -1000;		c.style.top = -1000;		} } }function msoBrowserCheck(){	ms = navigator.appVersion.indexOf("MSIE");	vers = navigator.appVersion.substring(ms + 5, ms + 6);	ie4 = (ms > 0) && (parseInt(vers) >= 4);	return ie4;}if (msoBrowserCheck()){	document.styleSheets.dynCom.addRule(".msocomanchor","background: infobackground");	document.styleSheets.dynCom.addRule(".msocomoff","display: none");	document.styleSheets.dynCom.addRule(".msocomtxt","visibility: hidden");	document.styleSheets.dynCom.addRule(".msocomtxt","position: absolute");	document.styleSheets.dynCom.addRule(".msocomtxt","top: -1000");	document.styleSheets.dynCom.addRule(".msocomtxt","left: -1000");	document.styleSheets.dynCom.addRule(".msocomtxt","width: 33%");	document.styleSheets.dynCom.addRule(".msocomtxt","background: infobackground");	document.styleSheets.dynCom.addRule(".msocomtxt","color: infotext");	document.styleSheets.dynCom.addRule(".msocomtxt","border-top: 1pt solid threedlightshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","border-right: 2pt solid threedshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","border-bottom: 2pt solid threedshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","border-left: 1pt solid threedlightshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","padding: 3pt 3pt 3pt 3pt");	document.styleSheets.dynCom.addRule(".msocomtxt","z-index: 100");}// --></script><style><!-- /* Font Definitions */ @font-face	{font-family:Helvetica;	panose-1:2 11 6 4 2 2 2 2 2 4;}@font-face	{font-family:Courier;	panose-1:2 7 4 9 2 2 5 2 4 4;}@font-face	{font-family:Wingdings;	panose-1:5 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:宋体;	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:黑体;	panose-1:2 1 6 9 6 1 1 1 1 1;}@font-face	{font-family:"Cambria Math";	panose-1:2 4 5 3 5 4 6 3 2 4;}@font-face	{font-family:等线;	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:Calibri;	panose-1:2 15 5 2 2 2 4 3 2 4;}@font-face	{font-family:"Calibri Light";	panose-1:2 15 3 2 2 2 4 3 2 4;}@font-face	{font-family:Verdana;	panose-1:2 11 6 4 3 5 4 4 2 4;}@font-face	{font-family:"Arial Unicode MS";	panose-1:2 11 6 4 2 2 2 2 2 4;}@font-face	{font-family:楷体_GB2312;}@font-face	{font-family:̥_GB2312;	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:DFKai-SB;}@font-face	{font-family:华文新魏;	panose-1:2 1 8 0 4 1 1 1 1 1;}@font-face	{font-family:方正姚体;	panose-1:2 1 6 1 3 1 1 1 1 1;}@font-face	{font-family:幼圆;	panose-1:2 1 5 9 6 1 1 1 1 1;}@font-face	{font-family:Consolas;	panose-1:2 11 6 9 2 2 4 3 2 4;}@font-face	{font-family:微软雅黑;	panose-1:2 11 5 3 2 2 4 2 2 4;}@font-face	{font-family:Tahoma;	panose-1:2 11 6 4 3 5 4 4 2 4;}@font-face	{font-family:"Segoe UI";	panose-1:2 11 5 2 4 2 4 2 2 3;}@font-face	{font-family:ˎ̥;	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Courier New 宋体";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Lucida Console";	panose-1:2 11 6 9 4 5 4 2 2 4;}@font-face	{font-family:"Segoe UI regular";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Seoge ui";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Myriad Pro";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Courier New ����";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:Cambria;	panose-1:2 4 5 3 5 4 6 3 2 4;}@font-face	{font-family:be;}@font-face	{font-family:zm;}@font-face	{font-family:"\@黑体";	panose-1:2 1 6 9 6 1 1 1 1 1;}@font-face	{font-family:"\@宋体";	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:"\@等线";	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:"\@微软雅黑";	panose-1:2 11 5 3 2 2 4 2 2 4;}@font-face	{font-family:"\@楷体_GB2312";}@font-face	{font-family:"\@Myriad Pro";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"\@Courier New 宋体";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"\@Arial Unicode MS";	panose-1:2 11 6 4 2 2 2 2 2 4;}@font-face	{font-family:"\@幼圆";	panose-1:2 1 5 9 6 1 1 1 1 1;}@font-face	{font-family:"\@方正姚体";	panose-1:2 1 6 1 3 1 1 1 1 1;}@font-face	{font-family:"\@华文新魏";	panose-1:2 1 8 0 4 1 1 1 1 1;}@font-face	{font-family:"\@DFKai-SB";} /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal	{margin:0cm;	text-align:justify;	text-justify:inter-ideograph;	text-indent:21.0pt;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;}h1	{mso-style-name:"标题 1\,h1\,Level 1 Topic Heading\,h11\,Level 1 Topic Heading1\,实例名称";	mso-style-link:"标题 1 字符1\,h1 字符1\,Level 1 Topic Heading 字符1\,h11 字符1\,Level 1 Topic Heading1 字符1\,实例名称 字符1";	margin:0cm;	text-align:justify;	text-justify:inter-ideograph;	line-height:150%;	page-break-after:avoid;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;	font-weight:bold;}h2	{mso-style-name:"标题 2\,Heading 2 Hidden\,Heading 2 CCBS\,Titre3\,HD2\,H2\,h2\,Level 2 Topic Heading\,Heading 2 Hidden1\,Heading 2 CCBS1\,Titre31\,HD21\,H21\,h21\,Level 2 Topic Heading1\,节题";	mso-style-link:"标题 2 字符1\,Heading 2 Hidden 字符1\,Heading 2 CCBS 字符1\,Titre3 字符1\,HD2 字符1\,H2 字符1\,h2 字符1\,Level 2 Topic Heading 字符1\,Heading 2 Hidden1 字符1\,Heading 2 CCBS1 字符1\,Titre31 字符1\,HD21 字符1\,H21 字符1\,h21 字符1\,Level 2 Topic Heading1 字符1\,节题 字符1";	margin-top:0cm;	margin-right:0cm;	margin-bottom:0cm;	margin-left:1.0cm;	text-align:justify;	text-justify:inter-ideograph;	text-indent:-1.0cm;	line-height:150%;	page-break-after:avoid;	font-size:11.0pt;	font-family:"Arial",sans-serif;	color:windowtext;	font-weight:bold;}h3	{mso-style-name:"标题 3\,Heading 3 - old\,sect1\.2\.3\,h3\,Level 3 Topic Heading\,Heading 3 - old1\,sect1\.2\.31\,h31\,Level 3 Topic Heading1\,\(分步\)\,\(小节\)";	mso-style-link:"标题 3 字符2\,Heading 3 - old 字符2\,sect1\.2\.3 字符2\,h3 字符2\,Level 3 Topic Heading 字符2\,Heading 3 - old1 字符2\,sect1\.2\.31 字符2\,h31 字符2\,Level 3 Topic Heading1 字符2\,\(分步\) 字符2\,\(小节\) 字符2";	margin-top:13.5pt;	margin-right:0cm;	margin-bottom:13.5pt;	margin-left:78.0pt;	text-align:justify;	text-justify:inter-ideograph;	text-indent:-35.45pt;	line-height:172%;	page-break-after:avoid;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;	font-weight:bold;}p.MsoCaption, li.MsoCaption, div.MsoCaption	{mso-style-link:"题注 字符2";	margin:0cm;	text-align:justify;	text-justify:inter-ideograph;	text-indent:21.0pt;	font-size:10.0pt;	font-family:"Arial",sans-serif;	color:windowtext;}span.MsoEndnoteReference	{vertical-align:super;}p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText	{mso-style-link:"尾注文本 字符2";	margin:0cm;	text-indent:21.0pt;	layout-grid-mode:char;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;}a:link, span.MsoHyperlink	{color:blue;	text-decoration:underline;}p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph	{margin:0cm;	font-size:12.0pt;	font-family:宋体;	color:windowtext;}span.11	{mso-style-name:"标题 1 字符1\,h1 字符1\,Level 1 Topic Heading 字符1\,h11 字符1\,Level 1 Topic Heading1 字符1\,实例名称 字符1";	mso-style-link:"标题 1\,h1\,Level 1 Topic Heading\,h11\,Level 1 Topic Heading1\,实例名称";	font-family:"Times New Roman",serif;	font-weight:bold;}span.2	{mso-style-name:"尾注文本 字符2";	mso-style-link:尾注文本;	font-family:"Times New Roman",serif;}span.20	{mso-style-name:"题注 字符2";	mso-style-link:题注;	font-family:"Arial",sans-serif;}span.21	{mso-style-name:"标题 2 字符1\,Heading 2 Hidden 字符1\,Heading 2 CCBS 字符1\,Titre3 字符1\,HD2 字符1\,H2 字符1\,h2 字符1\,Level 2 Topic Heading 字符1\,Heading 2 Hidden1 字符1\,Heading 2 CCBS1 字符1\,Titre31 字符1\,HD21 字符1\,H21 字符1\,h21 字符1\,Level 2 Topic Heading1 字符1\,节题 字符1";	mso-style-link:"标题 2\,Heading 2 Hidden\,Heading 2 CCBS\,Titre3\,HD2\,H2\,h2\,Level 2 Topic Heading\,Heading 2 Hidden1\,Heading 2 CCBS1\,Titre31\,HD21\,H21\,h21\,Level 2 Topic Heading1\,节题";	font-family:"Arial",sans-serif;	font-weight:bold;}p.4142515, li.4142515, div.4142515	{mso-style-name:"样式 标题 4 + 段前\: 14\.25 磅 段后\: 15 磅";	margin-top:0cm;	margin-right:0cm;	margin-bottom:0cm;	margin-left:42.55pt;	text-indent:-42.55pt;	page-break-after:avoid;	font-size:12.0pt;	font-family:"Arial",sans-serif;	color:windowtext;	font-weight:bold;}.MsoChpDefault	{font-family:"Calibri",sans-serif;} /* Page Definitions */ @page WordSection1	{size:595.3pt 841.9pt;	margin:72.0pt 56.65pt 72.0pt 2.0cm;	layout-grid:15.6pt;}div.WordSection1	{page:WordSection1;} /* List Definitions */ ol	{margin-bottom:0cm;}ul	{margin-bottom:0cm;}--></style><title>欢迎联系QQ：43930878。教与学_本机版_渔琴(Teaching&amp;Learning_LocalVersion_YuQin)</title></head><body lang="ZH-CN" link="blue" vlink="purple" style="overflow-wrap: break-word; cursor: default;" contenteditable="false"><div class="WordSection1" style="layout-grid:15.6pt"><h1 align="left" style="margin-top:7.8pt;margin-right:0cm;margin-bottom:7.8pt;margin-left:21.25pt;text-align:left;text-indent:-21.25pt;line-height:133%"><a name="_Ref120295364"></a><a name="_Toc120361009"></a><a name="_Toc120361056"></a><a name="_Toc120361425"></a><a name="_Ref138840451"></a><a name="_Ref141712760"></a><a name="_Toc141868686"></a><a name="_Ref111802879"><span lang="EN-US" style="font-size:18.0pt;line-height:133%;font-family:黑体">第5章<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-size:18.0pt;line-height:133%;font-family:黑体">教育数字思维视角的“教育软件</span></a><span style="font-size:18.0pt;line-height:133%;font-family:黑体">框架与案例”</span><a name="_Ref83040226"></a><a name="_Toc88575266"></a></h1><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Toc120361011"></a><a name="_Toc120361058"></a><a name="_Toc120361427"></a><a name="_Ref133561824"></a><a name="_Ref138507503"></a><a name="_Ref140616536"></a><a name="_Toc141868688"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.1<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span><span style="font-size:14.0pt;font-family:黑体">教育数字思维视角的教育软件框架与案例之一【目录导航的教育软件】</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Ref141546661"></a><a name="_Toc144379573"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.2<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">初创方的<span lang="EN-US">.Net</span>根基对象类型平台的工程四个环节（<span lang="EN-US">0/1</span>语言的<span lang="EN-US">.exe/.dll</span>文件）</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Toc121437399"></a><a name="_Ref140931032"></a><a name="_Ref141016399"></a><a name="_Ref141016402"></a><a name="_Ref141546671"></a><a name="_Ref143701665"></a><a name="_Toc144379574"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.3<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span><span style="font-size:14.0pt;font-family:黑体">他创方的<span lang="EN-US">.Net</span>拓展对象类型平台的工程四个环节（<span lang="EN-US">0/1</span>语言的<span lang="EN-US">.nupkg</span>文件）</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Toc121437283"></a><a name="_Ref127464199"></a><a name="_Toc133146131"></a><a name="_Ref140931033"></a><a name="_Ref141016410"></a><a name="_Ref141016414"></a><a name="_Ref141181940"></a><a name="_Ref141546673"></a><a name="_Ref142492432"></a><a name="_Ref143761902"></a><a name="_Ref143871205"></a><a name="_Toc144379575"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.4<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">自创方的<span lang="EN-US">.Net</span>拓展对象类型平台的工程四个环节（<span lang="EN-US">C#</span>语言的<span lang="EN-US">.cs</span>文件<span lang="EN-US">/.csproj</span>项目文件<span lang="EN-US">/.sln</span>解决方案文件）</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.5<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">对象类型的结构（线性结构、树型结构、网状结构）：<span lang="EN-US">LINQ/SQL</span></span></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Ref144746452"></a><a name="_Toc145147395"></a><a name="_Ref141181800"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.6<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">对象类型的关系</span></a><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">/</span><span style="font-size:14.0pt;font-family:黑体">模式</span></h2><p class="MsoNormal" align="center" style="margin-top:0cm;margin-right:1.0cm;margin-bottom:0cm;margin-left:42.55pt;margin-bottom:.0001pt;text-align:center;text-indent:0cm;layout-grid-mode:char"><a name="_Toc145147439"><span style="font-family:黑体">表 </span></a><span lang="EN-US" style="font-family:黑体">5</span><span lang="EN-US" style="font-family:黑体">‑</span><span lang="EN-US" style="font-family:黑体">9</span><span lang="EN-US" style="font-family:黑体"> </span><span style="font-family:黑体">对象类型的关系<span lang="EN-US">/</span>模式</span></p><div align="center"><table class="MsoTableGrid" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none"> <tbody><tr style="height:7.25pt">  <td width="623" valign="top" style="width:467.55pt;border:solid windowtext 1.0pt;  background:#E7E6E6;padding:0cm 5.4pt 0cm 5.4pt;height:7.25pt">  <p class="MsoNormal"><!--[if supportFields]><spanstyle='font-size:10.0pt'><span style='mso-element:field-begin'></span><spanstyle='mso-spacerun:yes'> </span>REF _Ref88050340 \h<spanstyle='mso-spacerun:yes'>  </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span></span><![endif]--><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;">表</span><span lang="ZH-CN" style="font-size:10.0pt"> </span><span style="font-size:10.0pt">3‑7<!--[if gte mso 9]><xml> <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F00520065006600380038003000350030003300340030000000</w:data></xml><![endif]--></span><!--[if supportFields]><span style='font-size:10.0pt'><spanstyle='mso-element:field-end'></span></span><![endif]--><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;">所示“教育数字思维的本质框架”、</span><!--[if supportFields]><spanstyle='font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast'><spanstyle='mso-element:field-begin'></span> REF _Ref143525543 \h<spanstyle='mso-spacerun:yes'>  </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span></span><![endif]--><span style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast"><span lang="ZH-CN">案例 </span>5‑3<!--[if gte mso 9]><xml> <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003100340033003500320035003500340033000000</w:data></xml><![endif]--></span><!--[if supportFields]><span style='font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast'><span style='mso-element:field-end'></span></span><![endif]--><span style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast">所示</span><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;">“教育软件框架与案例”</span><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast">中</span><span style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast">,<span lang="ZH-CN">涉及“客户端</span>MVC(<span lang="ZH-CN">架构</span>/<span lang="ZH-CN">模式</span>/<span lang="ZH-CN">关系</span>/<span lang="ZH-CN">结构</span>)<span lang="ZH-CN">、互动</span>MVC(<span lang="ZH-CN">架构</span>/<span lang="ZH-CN">模式</span>/<span lang="ZH-CN">关系</span>/<span lang="ZH-CN">结构</span>)<span lang="ZH-CN">、服务端</span>MVC(<span lang="ZH-CN">架构</span>/<span lang="ZH-CN">模式</span>/<span lang="ZH-CN">关系</span>/<span lang="ZH-CN">结构</span>)<span lang="ZH-CN">”。在此面向对象地探究对象类型的关系</span>/<span lang="ZH-CN">模式。</span></span><o:p></o:p></p><p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体;color:black">&nbsp; &nbsp;“</span><span style="font-family:宋体;color:black">对象类型的关系</span><span lang="EN-US" style="color:black">/</span><span style="font-family:宋体;color:black">模式</span><span style="font-size:10.0pt;  font-family:宋体;color:black">”</span><span style="font-size:10.0pt;color:black">  </span><span style="font-size:10.0pt;font-family:宋体;color:black">可以拆分成为“对象类型的关系”</span><span style="font-size:10.0pt;color:black"> </span><span style="font-size:10.0pt;  font-family:宋体;color:black">、“对象类型的模式”，目前关系</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;  font-family:宋体;color:black">模式也几乎难以绝对地区分界定，所以为了简单一些在此选择不拆分。“对象类型的关系</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">模式”是“对象类型的结构”的进一步抽象。关系</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">模式的种类繁多，</span><span style="font-size:10.0pt;font-family:宋体;color:black">案例</span><span style="font-size:10.0pt;color:black"> <span lang="EN-US">5‑3</span></span><span style="font-size:10.0pt;font-family:宋体;color:black">所示，初创方的</span><span lang="EN-US" style="font-size:10.0pt;color:black">.Net</span><span style="font-size:10.0pt;font-family:宋体;color:black">内置有</span><span lang="EN-US" style="font-size:10.0pt;color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size:10.0pt;font-family:宋体;color:black">封装</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">拆装、地址引用</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">拷贝赋值、寻根问底祖先抽象容变多态</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">继承拓展后代具体限定单态、接口</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">履约。本表教育数字思维视角地阐述对象类型的关系</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">模式如下（其他关系</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">模式具体涉及时具体阐述）。</span></p>  </td> </tr> <tr>  <td width="623" valign="top" style="width:467.55pt;border:solid windowtext 1.0pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:-17.85pt;  layout-grid-mode:char"><b><span lang="EN-US" style="font-size:10.5pt">一<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span></b><span style="font-size:10.5pt">、<b>关联与被关联</b></span></p>  <p class="MsoNormal" style="margin-top:7.2pt"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑4</span></span><span style="font-size:  10.0pt;font-family:宋体">是引用与被引用关系（即，关联与被关联关系）的一个代码实例（该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;  font-family:宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryRelationshipOfReference.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/TryRelationshipOfReference</span><span style="font-size:10.0pt;font-family:宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:黑体">图 <span lang="EN-US">5</span><span lang="EN-US">‑20</span></span><span style="font-size:10.0pt;font-family:宋体">所示。</span></p>  <p class="MsoCaption" align="center" style="margin-top:6.0pt;text-align:center"><a name="_Toc386143243"></a><a name="_Ref361327094"><span style="font-family:  黑体">案例</span> </a><span lang="EN-US">5</span><span lang="EN-US">‑</span><span lang="EN-US">4</span><span style="font-family:黑体">对象类型的关系：引用与被引用</span><span lang="EN-US">/</span><span style="font-family:黑体">关联与被关联</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr style="height:78.4pt">    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt;height:78.4pt">    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">using System;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">using System.Web.Mvc;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">namespace EDSS.Controllers.TryRelationshipOfReference</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">{</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; public class    TryRelationshipOfReferenceController : Controller</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassB classB = new ClassB();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassA classA=classB.tryMethod();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classA.tryProperty = "</span><span style="font-size:9.0pt;font-family:宋体">类</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:9.0pt;    font-family:宋体">的</span><span lang="EN-US" style="font-size:9.0pt">tryMethod()</span><span style="font-size:9.0pt;font-family:宋体">方法中，将类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">对象化为了</span><span lang="EN-US" style="font-size:9.0pt">classA</span><span style="font-size:9.0pt;font-family:宋体">，但仅涉及类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">的对象化，没有使用其属性、方法，所以类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">代码的变动不会导致类</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:9.0pt;font-family:宋体">代码的相应修改。此时称为：类</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:    9.0pt;font-family:宋体">引用</span><span lang="EN-US" style="font-size:9.0pt">/</span><span style="font-size:9.0pt;font-family:宋体">关联了类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">，或</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;font-family:宋体">被</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:9.0pt;    font-family:宋体">引用</span><span lang="EN-US" style="font-size:9.0pt">/</span><span style="font-size:9.0pt;font-family:宋体">关联。</span><span lang="EN-US" style="font-size:9.0pt">";</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return    this.Content(classA.tryProperty);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; internal class ClassA</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal String tryProperty { set; get; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; internal class ClassB</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal ClassA tryMethod()</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassA classA = new ClassA();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return classA;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="margin-top:7.2pt;text-align:center"><span lang="EN-US" style="font-size:10.0pt"><img width="496" height="134" id="Picture 1798" src="1690396244618.files/image001.jpg"></span></p>  <p class="MsoNormal" align="center" style="margin-top:7.2pt;text-align:center"><a name="_Toc386143103"></a><a name="_Toc145147475"></a><a name="_Ref383505176"><span style="font-size:10.0pt;font-family:黑体">图 </span></a><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">5</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">‑</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">20</span><span style="font-size:10.0pt;font-family:黑体">引用与被引用<span lang="EN-US">/</span>关联与被关联关系的运行结果示例</span></p>  <p class="MsoNormal" style="margin-top:7.2pt"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑4</span></span><span style="font-size:  10.0pt;font-family:宋体">中引用与被引用</span><span lang="EN-US" style="font-size:10.0pt">/</span><span style="font-size:10.0pt;font-family:宋体">关联与被关联关系的定义、对象化运行可概述如下：类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">的</span><span lang="EN-US" style="font-size:10.0pt">tryMethod()</span><span style="font-size:10.0pt;font-family:宋体">方法中，将类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">对象化为了</span><span lang="EN-US" style="font-size:10.0pt">classA</span><span style="font-size:10.0pt;font-family:宋体">，但仅涉及类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">的对象化，没有使用其属性、方法，所以即使类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">代码需要变化，也不会导致类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;font-family:宋体">代码的相应修改。此时称为：类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">引用</span><span lang="EN-US" style="font-size:10.0pt">/</span><span style="font-size:10.0pt;font-family:宋体">关联了类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">，或，</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">被</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">引用</span><span lang="EN-US" style="font-size:10.0pt">/</span><span style="font-size:10.0pt;font-family:宋体">关联。</span></p>  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:-17.85pt;  layout-grid-mode:char"><b><span lang="EN-US">二<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;  </span></span></b><b>、依赖与被依赖</b></p>  <p class="MsoNormal" style="margin-top:7.2pt"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑5</span></span><span style="font-size:  10.0pt;font-family:宋体">是依赖与被依赖的一个代码实例（该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryRelationshipOfDependency.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/TryRelationshipOfDependency</span><span style="font-size:10.0pt;font-family:宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:黑体">图 <span lang="EN-US">5</span><span lang="EN-US">‑21</span></span><span style="font-size:10.0pt;font-family:宋体">所示。</span></p>  <p class="MsoCaption" align="center" style="margin-top:6.0pt;text-align:center"><a name="_Toc386143244"></a><a name="_Ref361328986"><span style="font-family:  黑体">案例</span> </a><span lang="EN-US">5</span><span lang="EN-US">‑</span><span lang="EN-US">5</span><span style="font-family:黑体">对象类型的关系：依赖与被依赖</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr style="height:59.2pt">    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt;height:59.2pt">    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">using System;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">using System.Web.Mvc;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">namespace    EDSS.Controllers.TryRelationshipOfDependency</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">{</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; public class    TryRelationshipOfDependencyController : Controller</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassB classB = new ClassB();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassA classA = new ClassA();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classB.tryMethod(classA);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return    this.Content(classA.tryProperty);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal class ClassA</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal String tryProperty { set; get;    }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal class ClassB</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal ClassA tryMethod(ClassA    classA)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classA.tryProperty = "</span><span style="font-size:9.0pt;font-family:宋体">类</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:9.0pt;    font-family:宋体">的</span><span lang="EN-US" style="font-size:9.0pt">tryMethod()</span><span style="font-size:9.0pt;font-family:宋体">方法中，将类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">的对象作为参数，并使用其属性、方法，所以如果类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">代码需要变化，也将导致类</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:9.0pt;font-family:宋体">代码的相应修改。此时称为：类</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:    9.0pt;font-family:宋体">依赖类</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;font-family:宋体">，或，</span><span lang="EN-US" style="font-size:9.0pt">ClassA</span><span style="font-size:9.0pt;    font-family:宋体">被</span><span lang="EN-US" style="font-size:9.0pt">ClassB</span><span style="font-size:9.0pt;font-family:宋体">依赖。</span><span lang="EN-US" style="font-size:9.0pt">";</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return classA;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="margin-top:7.2pt;text-align:center"><span lang="EN-US" style="font-size:10.0pt"><img width="468" height="127" id="Picture 1801" src="1690396244618.files/image002.jpg"></span></p>  <p class="MsoNormal" align="center" style="margin-top:7.2pt;text-align:center"><a name="_Toc386143104"></a><a name="_Toc145147476"></a><a name="_Ref383508906"><span style="font-size:10.0pt;font-family:黑体">图 </span></a><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">5</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">‑</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">21</span><span style="font-size:10.0pt;font-family:黑体">依赖与被依赖关系的运行结果示例</span></p>  <p class="MsoNormal" style="margin-top:7.2pt"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑5</span></span><span style="font-size:  10.0pt;font-family:宋体">中依赖与被依赖关系的定义、对象化运行可概述如下：类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">的</span><span lang="EN-US" style="font-size:10.0pt">tryMethod()</span><span style="font-size:10.0pt;font-family:宋体">方法中，将类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">的对象作为参数，并使用其属性、方法，所以如果类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">代码需要变化，也将导致类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;font-family:宋体">代码的相应修改。此时称为：类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">依赖类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">，或，</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">被</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;font-family:宋体">依赖。</span></p>  <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:  char"><b><span lang="EN-US" style="font-size:10.0pt">&nbsp;</span></b></p>  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:-17.85pt;  layout-grid-mode:char"><b><span lang="EN-US" style="font-size:10.5pt">三<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span></b><b><span style="font-size:10.5pt">、复合<span lang="EN-US">/</span>被复合</span></b></p>  <p class="MsoNormal" style="margin-top:7.2pt"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑6</span></span><span style="font-size:  10.0pt;font-family:宋体">是复合与被复合的一个代码实例（该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryRelationshipOfComposite.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，</span><span style="font-size:10.0pt;font-family:宋体">浏览器</span><span style="font-size:10.0pt;font-family:宋体">地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/TryRelationshipOfComposite</span><span style="font-size:10.0pt;font-family:宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:宋体">图</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑22</span></span><span style="font-size:  10.0pt;font-family:宋体">所示。</span></p>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc386143245"></a><a name="_Ref361329208"><span style="font-size:10.0pt;font-family:宋体">案例</span></a><span style="font-size:  10.0pt"> </span><span lang="EN-US" style="font-size:10.0pt">5</span><span lang="EN-US" style="font-size:10.0pt">‑</span><span lang="EN-US" style="font-size:10.0pt">6</span><span style="font-size:10.0pt;  font-family:宋体">对象类型的关系：复合与被复合</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr style="height:97.35pt">    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt;height:97.35pt">    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System.Web.Mvc;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">namespace EDSS.Controllers.TryRelationshipOfComposite</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">{</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class TryRelationshipOfCompositeController :    Controller</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassB classB = new ClassB();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.Content(classB.Try);</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class ClassA</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String tryProperty { set; get; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class ClassB</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String Try { set; get; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ClassB()</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassA classA = new ClassA();</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classA.tryProperty = "</span><span style="font-family:宋体">类</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">对象化时（构造方法被调用），一定会同时对象化类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">。此时称为：类</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">复合了类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">，或，</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">被</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">复合。</span><span lang="EN-US">";</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Try = classA.tryProperty;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-size:10.0pt"><img width="501" height="135" id="Picture 1792" src="1690396244618.files/image003.jpg"></span></p>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc386143105"></a><a name="_Toc145147477"></a><a name="_Ref383538349"><span style="font-size:10.0pt;font-family:宋体">图</span></a><span style="font-size:10.0pt"> </span><span lang="EN-US" style="font-size:10.0pt">5</span><span lang="EN-US" style="font-size:10.0pt">‑</span><span lang="EN-US" style="font-size:10.0pt">22</span><span style="font-size:10.0pt;  font-family:宋体">复合与被复合关系的运行结果示例</span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt">  <span lang="EN-US">5</span><span lang="EN-US">‑6</span></span><span style="font-size:10.0pt;font-family:宋体">中复合与被复合关系的定义、对象化运行可概述如下：类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">对象化时（构造方法被调用），一定会同时对象化类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">。此时称为：类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;font-family:宋体">复合了类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">，或，</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">被</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">复合。</span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US" style="font-size:10.0pt">&nbsp;</span></p>  </td> </tr> <tr>  <td width="623" valign="top" style="width:467.55pt;border:solid windowtext 1.0pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:-17.85pt;  layout-grid-mode:char"><span lang="EN-US" style="font-size:10.5pt">四<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span><span style="font-size:10.5pt">、<b>聚合<span lang="EN-US">/</span>被聚合</b></span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US" style="font-size:10.0pt">&nbsp;</span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt">  <span lang="EN-US">5</span><span lang="EN-US">‑7</span></span><span style="font-size:10.0pt;font-family:宋体">是聚合与被聚合的一个代码实例（该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;  font-family:宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryRelationshipOfAggregation.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/  TryRelationshipOfAggregation</span><span style="font-size:10.0pt;font-family:  宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:宋体">图</span><span style="font-size:10.0pt">  <span lang="EN-US">5</span><span lang="EN-US">‑23</span></span><span style="font-size:10.0pt;font-family:宋体">所示。</span></p>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc386143246"></a><a name="_Ref361329209"><span style="font-size:10.0pt;font-family:宋体">案例</span></a><span style="font-size:  10.0pt"> </span><span lang="EN-US" style="font-size:10.0pt">5</span><span lang="EN-US" style="font-size:10.0pt">‑</span><span lang="EN-US" style="font-size:10.0pt">7</span><span style="font-size:10.0pt;  font-family:宋体">对象类型的关系：聚合与被聚合</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr style="height:20.8pt">    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt;height:20.8pt">    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System.Web.Mvc;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">namespace EDSS.Controllers.TryRelationshipOfAggregation</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">{</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class TryRelationshipOfAggregationController :    Controller</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassC classC = new ClassC();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.Content(classC.TryMethod());</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class ClassA</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String tryProperty { set; get; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class ClassB</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String tryProperty { set; get; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class ClassC</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassA classA= new ClassA();</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassB classB= new ClassB();</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ClassC()</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String TryMethod()</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classA.tryProperty = "</span><span style="font-family:宋体">类</span><span lang="EN-US">ClassC</span><span style="font-family:宋体">中对象化了类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">、</span><span lang="EN-US">ClassB(</span><span style="font-family:宋体">但不是在构造方法中对象化</span><span lang="EN-US">)</span><span style="font-family:宋体">。此时称为：类</span><span lang="EN-US">ClassC</span><span style="font-family:宋体">聚合了类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">、</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">，或，</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">、</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">被</span><span lang="EN-US">ClassC</span><span style="font-family:宋体">聚合。</span><span lang="EN-US">";</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classB.tryProperty = "";</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return classA.tryProperty + classB.tryProperty;</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">} </span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-size:10.0pt"><img width="468" height="127" id="Picture 1795" src="1690396244618.files/image004.jpg"></span></p>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc386143106"></a><a name="_Toc145147478"></a><a name="_Ref383541337"><span style="font-size:10.0pt;font-family:宋体">图</span></a><span style="font-size:10.0pt"> </span><span lang="EN-US" style="font-size:10.0pt">5</span><span lang="EN-US" style="font-size:10.0pt">‑</span><span lang="EN-US" style="font-size:10.0pt">23</span><span style="font-size:10.0pt;  font-family:宋体">聚合与被聚合关系的运行结果示例</span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt">  <span lang="EN-US">5</span><span lang="EN-US">‑7</span></span><span style="font-size:10.0pt;font-family:宋体">中聚合与被聚合关系的定义、对象化运行可概述如下：类</span><span lang="EN-US" style="font-size:10.0pt">ClassC</span><span style="font-size:10.0pt;  font-family:宋体">中对象化了类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">、</span><span lang="EN-US" style="font-size:10.0pt">ClassB(</span><span style="font-size:10.0pt;  font-family:宋体">但不是在构造方法中对象化</span><span lang="EN-US" style="font-size:10.0pt">)</span><span style="font-size:10.0pt;font-family:宋体">。此时称为：类</span><span lang="EN-US" style="font-size:10.0pt">ClassC</span><span style="font-size:10.0pt;  font-family:宋体">聚合了类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">、</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">，或，</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">、</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">被</span><span lang="EN-US" style="font-size:10.0pt">ClassC</span><span style="font-size:10.0pt;font-family:宋体">聚合</span><sup><span lang="EN-US" style="font-size:10.0pt">[<a href="#_edn1" name="_ednref1" title=""><sup><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;,serif">[i]</span></sup></a>]</span></sup><span style="font-size:10.0pt;font-family:宋体">。</span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US" style="font-size:10.0pt">&nbsp;</span></p>  </td> </tr> <tr>  <td width="623" valign="top" style="width:467.55pt;border:solid windowtext 1.0pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:-17.85pt;  layout-grid-mode:char"><b><span lang="EN-US" style="font-size:10.5pt">五<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span></b><b><span style="font-size:10.5pt">、嵌套<span lang="EN-US">/</span>被嵌套</span></b></p>  <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:  char"><span lang="EN-US" style="font-size:10.0pt">&nbsp;</span></p>  <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:  char"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑8</span></span><span style="font-size:10.0pt;font-family:宋体">是嵌套与被嵌套的一个代码实例（该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;  font-family:宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryRelationshipOfEmbedding.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/TryRelationshipOfEmbedding</span><span style="font-size:10.0pt;font-family:宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:宋体">图</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑24</span></span><span style="font-size:  10.0pt;font-family:宋体">所示。</span></p>  <p class="MsoNormal" align="center" style="margin-left:4.85pt;text-align:center;  text-indent:0cm;layout-grid-mode:char"><a name="_Toc386143247"></a><a name="_Ref361329210"><span style="font-size:10.0pt;font-family:宋体">案例</span></a><span style="font-size:10.0pt"> </span><span lang="EN-US" style="font-size:10.0pt">5</span><span lang="EN-US" style="font-size:10.0pt">‑</span><span lang="EN-US" style="font-size:10.0pt">8</span><span style="font-size:10.0pt;  font-family:宋体">对象类型的关系：嵌套与被嵌套</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr style="height:97.35pt">    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt;height:97.35pt">    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">using System;</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">using System.Web.Mvc;</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">namespace    EDSS.Controllers.TryRelationshipOfEmbedding</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">{</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class    TryRelationshipOfEmbeddingController : Controller</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClassA.ClassB classB = new    ClassA.ClassB();</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; classB.tryProperty = "</span><span style="font-family:宋体">类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">中嵌套定义了类</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">。此时称为：类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">嵌套了类</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">，或，类</span><span lang="EN-US">ClassB</span><span style="font-family:宋体">被类</span><span lang="EN-US">ClassA</span><span style="font-family:宋体">嵌套。</span><span lang="EN-US">";</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.Content(classB.tryProperty);</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; </span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class ClassA</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public class ClassB</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String tryProperty { set; get; }</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:    char"><span lang="EN-US">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="margin-left:4.85pt;text-align:center;  text-indent:0cm;layout-grid-mode:char"><span lang="EN-US" style="font-size:  10.0pt"><img width="435" height="160" id="Picture 1797" src="1690396244618.files/image005.jpg"></span></p>  <p class="MsoNormal" align="center" style="margin-left:4.85pt;text-align:center;  text-indent:0cm;layout-grid-mode:char"><a name="_Toc386143107"></a><a name="_Toc145147479"></a><a name="_Ref383543413"><span style="font-size:10.0pt;  font-family:宋体">图</span></a><span style="font-size:10.0pt"> </span><span lang="EN-US" style="font-size:10.0pt">5</span><span lang="EN-US" style="font-size:  10.0pt">‑</span><span lang="EN-US" style="font-size:10.0pt">24</span><span style="font-size:10.0pt;  font-family:宋体">嵌套与被嵌套关系的运行结果示例</span></p>  <p class="MsoNormal" style="margin-left:4.85pt;text-indent:0cm;layout-grid-mode:  char"><span style="font-size:10.0pt;font-family:宋体">案例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑8</span></span><span style="font-size:10.0pt;font-family:宋体">中嵌套与被嵌套关系的定义、对象化运行可概述如下：类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">中嵌套定义了类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;font-family:宋体">。此时称为：类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;  font-family:宋体">嵌套了类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;font-family:宋体">，或，类</span><span lang="EN-US" style="font-size:10.0pt">ClassB</span><span style="font-size:10.0pt;  font-family:宋体">被类</span><span lang="EN-US" style="font-size:10.0pt">ClassA</span><span style="font-size:10.0pt;font-family:宋体">嵌套。嵌套类型较少使用，有时需要嵌套与被嵌套的类型之间的特殊可访问性时，会考虑嵌套类型，由于被嵌套类型被视为是嵌套类型的成员，因此嵌套类型可以访问被嵌套类型中的所有成员。</span></p>  </td> </tr> <tr style="height:7.25pt">  <td width="623" valign="top" style="width:467.55pt;border:solid windowtext 1.0pt;  border-top:none;background:#E7E6E6;padding:0cm 5.4pt 0cm 5.4pt;height:7.25pt">  <p class="MsoNormal" style="text-indent:0cm"><span lang="EN-US" style="font-size:  10.0pt;color:black">GoF</span><span style="font-size:10.0pt;font-family:宋体;  color:black">于</span><span lang="EN-US" style="font-size:10.0pt;color:black">1995</span><span style="font-size:10.0pt;font-family:宋体;color:black">年提出</span><span lang="EN-US" style="font-size:10.0pt;color:black">23</span><span style="font-size:10.0pt;font-family:宋体;color:black">种经典的对象类型的关系</span><span lang="EN-US" style="font-size:10.0pt;color:black">/</span><span style="font-size:10.0pt;font-family:宋体;color:black">模式</span><sup><span lang="EN-US" style="font-size:10.0pt;color:black">[<a href="#_edn2" name="_ednref2" title=""><span class="MsoEndnoteReference"><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:10.0pt;  font-family:&quot;Times New Roman&quot;,serif;color:black">[ii]</span></span></span></a>]</span></sup><span style="font-size:10.0pt;font-family:宋体;color:black">（</span><span lang="EN-US" style="font-size:10.0pt;color:black">Factory</span><span style="font-size:  10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:  10.0pt;color:black">Abstract Factory</span><span style="font-size:10.0pt;  font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;  color:black">Singleton</span><span style="font-size:10.0pt;font-family:宋体;  color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Builder</span><span style="font-size:10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">ProtoType</span><span style="font-size:  10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:  10.0pt;color:black">Adapter</span><span style="font-size:10.0pt;font-family:  宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">decarator</span><span style="font-size:10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Bridge</span><span style="font-size:  10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:  10.0pt;color:black">Flyweight</span><span style="font-size:10.0pt;font-family:  宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Façade</span><span style="font-size:10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Proxy</span><span style="font-size:10.0pt;  font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;  color:black">Composite</span><span style="font-size:10.0pt;font-family:宋体;  color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Templator</span><span style="font-size:10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Observer</span><span style="font-size:  10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:  10.0pt;color:black">Iterator</span><span style="font-size:10.0pt;font-family:  宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Chain  of Responsibily</span><span style="font-size:10.0pt;font-family:宋体;  color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Memento</span><span style="font-size:10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Command</span><span style="font-size:  10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:  10.0pt;color:black">State</span><span style="font-size:10.0pt;font-family:  宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Visitor</span><span style="font-size:10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Mediator&nbsp; </span><span style="font-size:  10.0pt;font-family:宋体;color:black">、</span><span lang="EN-US" style="font-size:  10.0pt;color:black">Strategy</span><span style="font-size:10.0pt;font-family:  宋体;color:black">、</span><span lang="EN-US" style="font-size:10.0pt;color:black">Interpreter</span><span style="font-size:10.0pt;font-family:宋体;color:black">），可以参考</span><span lang="EN-US" style="font-size:10.0pt;color:black"><a href="https://www.dofactory.com/net/design-patterns">https://www.dofactory.com/net/design-patterns</a></span><span style="font-size:10.0pt;font-family:宋体;color:black">，教育数字思维视角地思考具体实现的</span><span lang="EN-US" style="font-size:10.0pt;color:black">.Net</span><span style="font-size:10.0pt;font-family:宋体;color:black">平台</span><span lang="EN-US" style="font-size:10.0pt;color:black">C#</span><span style="font-size:10.0pt;font-family:宋体;color:black">语言代码。</span></p>  </td> </tr></tbody></table></div><p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm"><span lang="EN-US">&nbsp;</span></p><p class="MsoNormal" style="text-indent:0cm"><span lang="EN-US">&nbsp;</span></p></div><div><br clear="all"><hr align="left" size="1" width="33%"><div id="edn1"><p class="MsoEndnoteText" style="margin-left:12.15pt;text-indent:-12.15pt"><a href="#_ednref1" name="_edn1" title=""></a><span lang="EN-US" style="font-size:9.0pt">[<span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Times New Roman&quot;,serif">[i]</span>]</span><span style="font-size:9.0pt;font-family:宋体">聚合能将现有的一些类集合起来，获得更多的功能。类继承能将父类的属性、方法继承到子类，子类并可扩展想要的其他属性、方法，也是获得更多的功能。如果两者最终的目标是一样，那么，应该尽量选择聚合关系的方式实现，而非选择继承关系的方式实现。因为继承关系代码的维护容易产生多个层次的级联影响，而聚合关系代码的维护不会产生多个层次的级联影响。</span></p></div><div id="edn2"><p class="MsoNormal" align="left" style="margin-left:18.0pt;text-align:left;text-indent:-18.0pt;word-break:break-all"><a href="#_ednref2" name="_edn2" title=""></a><span lang="EN-US" style="font-size:9.0pt">[<span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Times New Roman&quot;,serif">[ii]</span>] </span><span lang="EN-US"><a href="https://www.dofactory.com/net/design-patterns"><span style="font-size:9.0pt">https://www.dofactory.com/net/design-patterns</span></a></span></p></div></div><!--右键菜单开始 --><div id="popupDiv" onclick="fnPopupClosePopup();" oncontextmenu="fnPopupContextMenu();" style="position: fixed; z-index: 1000; margin: 2px; border: 1px solid black; overflow: visible; font-size: 11px; cursor: default; display: block; background-color: lightyellow; width: 90px; height: 60px; left: 487px; top: 296px;"><div style="position: relative;" onmouseover="fnPopupMouseOver();" onmouseout="fnPopupMouseOut();"><div title="刷新标题面" onclick="location.reload();" style="color: rgb(0, 0, 0);">刷新</div><div title="单击将在是否可以在线编辑课文的之间切换!" onclick="if(document.body.contentEditable==true) { document.body.contentEditable = false; } else { document.body.contentEditable = true;}" style="color: rgb(0, 0, 0);">课文编辑切换</div><div title="编辑后可保存编辑结果" onclick="fnSave();" style="color: rgb(0, 255, 0);">保存</div><div title="打开帮助文档" onclick="fnHelp();">帮助</div></div></div><!--右键菜单结束--><script id="sIdScriptAutoAddedForDynFunction1" src="../../../../common/script/content.js"></script><script id="sIdScriptAutoAddedForDynFunction2" src="../../../../common/script/Popup.js"></script><script id="sIdScriptAutoAddedForDynFunction3">document.body.onload=fnOnLoad;</script></body></html>