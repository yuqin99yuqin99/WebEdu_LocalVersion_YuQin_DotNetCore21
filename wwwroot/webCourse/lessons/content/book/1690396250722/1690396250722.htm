<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="Generator" content="Microsoft Word 15 (filtered)"><style id="dynCom" type="text/css"><!-- --></style><script language="JavaScript"><!--function msoCommentShow(anchor_id, com_id){	if(msoBrowserCheck()) 		{		c = document.all(com_id);		a = document.all(anchor_id);		if (null != c && null == c.length && null != a && null == a.length)			{			var cw = c.offsetWidth;			var ch = c.offsetHeight;			var aw = a.offsetWidth;			var ah = a.offsetHeight;			var x  = a.offsetLeft;			var y  = a.offsetTop;			var el = a;			while (el.tagName != "BODY") 				{				el = el.offsetParent;				x = x + el.offsetLeft;				y = y + el.offsetTop;				}			var bw = document.body.clientWidth;			var bh = document.body.clientHeight;			var bsl = document.body.scrollLeft;			var bst = document.body.scrollTop;			if (x + cw + ah / 2 > bw + bsl && x + aw - ah / 2 - cw >= bsl ) 				{ c.style.left = x + aw - ah / 2 - cw; }			else 				{ c.style.left = x + ah / 2; }			if (y + ch + ah / 2 > bh + bst && y + ah / 2 - ch >= bst ) 				{ c.style.top = y + ah / 2 - ch; }			else 				{ c.style.top = y + ah / 2; }			c.style.visibility = "visible";}	}	}function msoCommentHide(com_id) {	if(msoBrowserCheck())		{		c = document.all(com_id);		if (null != c && null == c.length)		{		c.style.visibility = "hidden";		c.style.left = -1000;		c.style.top = -1000;		} } }function msoBrowserCheck(){	ms = navigator.appVersion.indexOf("MSIE");	vers = navigator.appVersion.substring(ms + 5, ms + 6);	ie4 = (ms > 0) && (parseInt(vers) >= 4);	return ie4;}if (msoBrowserCheck()){	document.styleSheets.dynCom.addRule(".msocomanchor","background: infobackground");	document.styleSheets.dynCom.addRule(".msocomoff","display: none");	document.styleSheets.dynCom.addRule(".msocomtxt","visibility: hidden");	document.styleSheets.dynCom.addRule(".msocomtxt","position: absolute");	document.styleSheets.dynCom.addRule(".msocomtxt","top: -1000");	document.styleSheets.dynCom.addRule(".msocomtxt","left: -1000");	document.styleSheets.dynCom.addRule(".msocomtxt","width: 33%");	document.styleSheets.dynCom.addRule(".msocomtxt","background: infobackground");	document.styleSheets.dynCom.addRule(".msocomtxt","color: infotext");	document.styleSheets.dynCom.addRule(".msocomtxt","border-top: 1pt solid threedlightshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","border-right: 2pt solid threedshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","border-bottom: 2pt solid threedshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","border-left: 1pt solid threedlightshadow");	document.styleSheets.dynCom.addRule(".msocomtxt","padding: 3pt 3pt 3pt 3pt");	document.styleSheets.dynCom.addRule(".msocomtxt","z-index: 100");}// --></script><style><!-- /* Font Definitions */ @font-face	{font-family:Helvetica;	panose-1:2 11 6 4 2 2 2 2 2 4;}@font-face	{font-family:Courier;	panose-1:2 7 4 9 2 2 5 2 4 4;}@font-face	{font-family:Wingdings;	panose-1:5 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:宋体;	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:黑体;	panose-1:2 1 6 9 6 1 1 1 1 1;}@font-face	{font-family:"Cambria Math";	panose-1:2 4 5 3 5 4 6 3 2 4;}@font-face	{font-family:等线;	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:Calibri;	panose-1:2 15 5 2 2 2 4 3 2 4;}@font-face	{font-family:"Calibri Light";	panose-1:2 15 3 2 2 2 4 3 2 4;}@font-face	{font-family:Verdana;	panose-1:2 11 6 4 3 5 4 4 2 4;}@font-face	{font-family:"Arial Unicode MS";	panose-1:2 11 6 4 2 2 2 2 2 4;}@font-face	{font-family:楷体_GB2312;}@font-face	{font-family:̥_GB2312;	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:DFKai-SB;}@font-face	{font-family:华文新魏;	panose-1:2 1 8 0 4 1 1 1 1 1;}@font-face	{font-family:方正姚体;	panose-1:2 1 6 1 3 1 1 1 1 1;}@font-face	{font-family:幼圆;	panose-1:2 1 5 9 6 1 1 1 1 1;}@font-face	{font-family:Consolas;	panose-1:2 11 6 9 2 2 4 3 2 4;}@font-face	{font-family:微软雅黑;	panose-1:2 11 5 3 2 2 4 2 2 4;}@font-face	{font-family:Tahoma;	panose-1:2 11 6 4 3 5 4 4 2 4;}@font-face	{font-family:"Segoe UI";	panose-1:2 11 5 2 4 2 4 2 2 3;}@font-face	{font-family:ˎ̥;	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Courier New 宋体";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Lucida Console";	panose-1:2 11 6 9 4 5 4 2 2 4;}@font-face	{font-family:"Segoe UI regular";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Seoge ui";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Myriad Pro";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"Courier New ����";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:Cambria;	panose-1:2 4 5 3 5 4 6 3 2 4;}@font-face	{font-family:be;}@font-face	{font-family:zm;}@font-face	{font-family:楷体;	panose-1:2 1 6 9 6 1 1 1 1 1;}@font-face	{font-family:"\@黑体";	panose-1:2 1 6 9 6 1 1 1 1 1;}@font-face	{font-family:"\@宋体";	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:"\@楷体";	panose-1:2 1 6 9 6 1 1 1 1 1;}@font-face	{font-family:"\@等线";	panose-1:2 1 6 0 3 1 1 1 1 1;}@font-face	{font-family:"\@微软雅黑";	panose-1:2 11 5 3 2 2 4 2 2 4;}@font-face	{font-family:"\@楷体_GB2312";}@font-face	{font-family:"\@Myriad Pro";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"\@Courier New 宋体";	panose-1:0 0 0 0 0 0 0 0 0 0;}@font-face	{font-family:"\@Arial Unicode MS";	panose-1:2 11 6 4 2 2 2 2 2 4;}@font-face	{font-family:"\@幼圆";	panose-1:2 1 5 9 6 1 1 1 1 1;}@font-face	{font-family:"\@方正姚体";	panose-1:2 1 6 1 3 1 1 1 1 1;}@font-face	{font-family:"\@华文新魏";	panose-1:2 1 8 0 4 1 1 1 1 1;}@font-face	{font-family:"\@DFKai-SB";} /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal	{margin:0cm;	text-align:justify;	text-justify:inter-ideograph;	text-indent:21.0pt;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;}h1	{mso-style-name:"标题 1\,h1\,Level 1 Topic Heading\,h11\,Level 1 Topic Heading1\,实例名称";	mso-style-link:"标题 1 字符1\,h1 字符1\,Level 1 Topic Heading 字符1\,h11 字符1\,Level 1 Topic Heading1 字符1\,实例名称 字符1";	margin:0cm;	text-align:justify;	text-justify:inter-ideograph;	line-height:150%;	page-break-after:avoid;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;	font-weight:bold;}h2	{mso-style-name:"标题 2\,Heading 2 Hidden\,Heading 2 CCBS\,Titre3\,HD2\,H2\,h2\,Level 2 Topic Heading\,Heading 2 Hidden1\,Heading 2 CCBS1\,Titre31\,HD21\,H21\,h21\,Level 2 Topic Heading1\,节题";	mso-style-link:"标题 2 字符1\,Heading 2 Hidden 字符1\,Heading 2 CCBS 字符1\,Titre3 字符1\,HD2 字符1\,H2 字符1\,h2 字符1\,Level 2 Topic Heading 字符1\,Heading 2 Hidden1 字符1\,Heading 2 CCBS1 字符1\,Titre31 字符1\,HD21 字符1\,H21 字符1\,h21 字符1\,Level 2 Topic Heading1 字符1\,节题 字符1";	margin-top:0cm;	margin-right:0cm;	margin-bottom:0cm;	margin-left:1.0cm;	text-align:justify;	text-justify:inter-ideograph;	text-indent:-1.0cm;	line-height:150%;	page-break-after:avoid;	font-size:11.0pt;	font-family:"Arial",sans-serif;	color:windowtext;	font-weight:bold;}h3	{mso-style-name:"标题 3\,Heading 3 - old\,sect1\.2\.3\,h3\,Level 3 Topic Heading\,Heading 3 - old1\,sect1\.2\.31\,h31\,Level 3 Topic Heading1\,\(分步\)\,\(小节\)";	mso-style-link:"标题 3 字符2\,Heading 3 - old 字符2\,sect1\.2\.3 字符2\,h3 字符2\,Level 3 Topic Heading 字符2\,Heading 3 - old1 字符2\,sect1\.2\.31 字符2\,h31 字符2\,Level 3 Topic Heading1 字符2\,\(分步\) 字符2\,\(小节\) 字符2";	margin-top:13.5pt;	margin-right:0cm;	margin-bottom:13.5pt;	margin-left:78.0pt;	text-align:justify;	text-justify:inter-ideograph;	text-indent:-35.45pt;	line-height:172%;	page-break-after:avoid;	font-size:10.5pt;	font-family:"Times New Roman",serif;	color:windowtext;	font-weight:bold;}p.MsoCaption, li.MsoCaption, div.MsoCaption	{mso-style-link:"题注 字符2";	margin:0cm;	text-align:justify;	text-justify:inter-ideograph;	text-indent:21.0pt;	font-size:10.0pt;	font-family:"Arial",sans-serif;	color:windowtext;}span.MsoEndnoteReference	{vertical-align:super;}a:link, span.MsoHyperlink	{color:blue;	text-decoration:underline;}p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph	{margin:0cm;	font-size:12.0pt;	font-family:宋体;	color:windowtext;}span.11	{mso-style-name:"标题 1 字符1\,h1 字符1\,Level 1 Topic Heading 字符1\,h11 字符1\,Level 1 Topic Heading1 字符1\,实例名称 字符1";	mso-style-link:"标题 1\,h1\,Level 1 Topic Heading\,h11\,Level 1 Topic Heading1\,实例名称";	font-family:"Times New Roman",serif;	font-weight:bold;}span.2	{mso-style-name:"题注 字符2";	mso-style-link:题注;	font-family:"Arial",sans-serif;}span.21	{mso-style-name:"标题 2 字符1\,Heading 2 Hidden 字符1\,Heading 2 CCBS 字符1\,Titre3 字符1\,HD2 字符1\,H2 字符1\,h2 字符1\,Level 2 Topic Heading 字符1\,Heading 2 Hidden1 字符1\,Heading 2 CCBS1 字符1\,Titre31 字符1\,HD21 字符1\,H21 字符1\,h21 字符1\,Level 2 Topic Heading1 字符1\,节题 字符1";	mso-style-link:"标题 2\,Heading 2 Hidden\,Heading 2 CCBS\,Titre3\,HD2\,H2\,h2\,Level 2 Topic Heading\,Heading 2 Hidden1\,Heading 2 CCBS1\,Titre31\,HD21\,H21\,h21\,Level 2 Topic Heading1\,节题";	font-family:"Arial",sans-serif;	font-weight:bold;}p.a, li.a, div.a	{mso-style-name:代码;	mso-style-link:"代码 Char";	margin-top:0cm;	margin-right:0cm;	margin-bottom:0cm;	margin-left:42.0pt;	text-indent:-21.0pt;	font-size:9.0pt;	font-family:宋体;	color:windowtext;}span.Char	{mso-style-name:"代码 Char";	mso-style-link:代码;	font-family:宋体;}p.4142515, li.4142515, div.4142515	{mso-style-name:"样式 标题 4 + 段前\: 14\.25 磅 段后\: 15 磅";	margin-top:0cm;	margin-right:0cm;	margin-bottom:0cm;	margin-left:42.55pt;	text-indent:-42.55pt;	page-break-after:avoid;	font-size:12.0pt;	font-family:"Arial",sans-serif;	color:windowtext;	font-weight:bold;}.MsoChpDefault	{font-family:"Calibri",sans-serif;} /* Page Definitions */ @page WordSection1	{size:595.3pt 841.9pt;	margin:72.0pt 56.65pt 72.0pt 2.0cm;	layout-grid:15.6pt;}div.WordSection1	{page:WordSection1;} /* List Definitions */ ol	{margin-bottom:0cm;}ul	{margin-bottom:0cm;}--></style><title>欢迎联系QQ：43930878。教与学_本机版_渔琴(Teaching&amp;Learning_LocalVersion_YuQin)</title></head><body lang="ZH-CN" link="blue" vlink="purple" style="overflow-wrap: break-word; cursor: default;" contenteditable="false"><div class="WordSection1" style="layout-grid:15.6pt"><h1 align="left" style="margin-top:7.8pt;margin-right:0cm;margin-bottom:7.8pt;margin-left:21.25pt;text-align:left;text-indent:-21.25pt;line-height:133%"><a name="_Ref120295364"></a><a name="_Toc120361009"></a><a name="_Toc120361056"></a><a name="_Toc120361425"></a><a name="_Ref138840451"></a><a name="_Ref141712760"></a><a name="_Toc141868686"></a><a name="_Ref111802879"><span lang="EN-US" style="font-size:18.0pt;line-height:133%;font-family:黑体">第5章<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-size:18.0pt;line-height:133%;font-family:黑体">教育数字思维视角的“教育软件</span></a><span style="font-size:18.0pt;line-height:133%;font-family:黑体">框架与案例”</span><a name="_Ref83040226"></a><a name="_Toc88575266"></a></h1><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Toc120361011"></a><a name="_Toc120361058"></a><a name="_Toc120361427"></a><a name="_Ref133561824"></a><a name="_Ref138507503"></a><a name="_Ref140616536"></a><a name="_Toc141868688"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.1<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span><span style="font-size:14.0pt;font-family:黑体">教育数字思维视角的教育软件框架与案例之一【目录导航的教育软件】</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Ref141546661"></a><a name="_Toc144379573"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.2<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">初创方的<span lang="EN-US">.Net</span>根基对象类型平台的工程四个环节（<span lang="EN-US">0/1</span>语言的<span lang="EN-US">.exe/.dll</span>文件）</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Toc121437399"></a><a name="_Ref140931032"></a><a name="_Ref141016399"></a><a name="_Ref141016402"></a><a name="_Ref141546671"></a><a name="_Ref143701665"></a><a name="_Toc144379574"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.3<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp; </span></span><span style="font-size:14.0pt;font-family:黑体">他创方的<span lang="EN-US">.Net</span>拓展对象类型平台的工程四个环节（<span lang="EN-US">0/1</span>语言的<span lang="EN-US">.nupkg</span>文件）</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Toc121437283"></a><a name="_Ref127464199"></a><a name="_Toc133146131"></a><a name="_Ref140931033"></a><a name="_Ref141016410"></a><a name="_Ref141016414"></a><a name="_Ref141181940"></a><a name="_Ref141546673"></a><a name="_Ref142492432"></a><a name="_Ref143761902"></a><a name="_Ref143871205"></a><a name="_Toc144379575"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.4<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">自创方的<span lang="EN-US">.Net</span>拓展对象类型平台的工程四个环节（<span lang="EN-US">C#</span>语言的<span lang="EN-US">.cs</span>文件<span lang="EN-US">/.csproj</span>项目文件<span lang="EN-US">/.sln</span>解决方案文件）</span></a></h2><h2 style="margin-top:7.8pt;line-height:normal;layout-grid-mode:char"><a name="_Ref141181801"></a><a name="_Toc145147394"><span lang="EN-US" style="font-size:14.0pt;font-family:黑体">5.5<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;</span></span><span style="font-size:14.0pt;font-family:黑体">对象类型的结构（线性结构、树型结构、网状结构）：<span lang="EN-US">LINQ/SQL</span></span></a></h2><p class="MsoNormal" align="center" style="margin-top:0cm;margin-right:1.0cm;margin-bottom:0cm;margin-left:42.55pt;margin-bottom:.0001pt;text-align:center;text-indent:0cm;layout-grid-mode:char"><a name="_Toc145147437"><span style="font-family:黑体">表 </span></a><span lang="EN-US" style="font-family:黑体">5</span><span lang="EN-US" style="font-family:黑体">‑</span><span lang="EN-US" style="font-family:黑体">7</span><span lang="EN-US" style="font-family:黑体"> </span><span style="font-family:黑体">对象类型的结构（线性结构、树型结构、网状结构）：<span lang="EN-US">LINQ/SQL</span></span></p><div align="center"><table class="MsoTableGrid" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none"> <tbody><tr style="height:7.25pt">  <td width="623" colspan="2" valign="top" style="width:467.55pt;border:solid windowtext 1.0pt;  background:#E7E6E6;padding:0cm 5.4pt 0cm 5.4pt;height:7.25pt">  <p class="MsoNormal"><!--[if supportFields]><spanstyle='font-size:10.0pt'><span style='mso-element:field-begin'></span><spanstyle='mso-spacerun:yes'> </span>REF _Ref88050340 \h<spanstyle='mso-spacerun:yes'>  </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span></span><![endif]--><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;">表</span><span lang="ZH-CN" style="font-size:10.0pt"> </span><span style="font-size:10.0pt">3‑7<!--[if gte mso 9]><xml> <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F00520065006600380038003000350030003300340030000000</w:data></xml><![endif]--></span><!--[if supportFields]><span style='font-size:10.0pt'><spanstyle='mso-element:field-end'></span></span><![endif]--><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;">所示“教育数字思维的本质框架”、</span><!--[if supportFields]><spanstyle='font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast'><spanstyle='mso-element:field-begin'></span> REF _Ref143525543 \h<spanstyle='mso-spacerun:yes'>  </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span></span><![endif]--><span style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast"><span lang="ZH-CN">案例 </span>5‑3<!--[if gte mso 9]><xml> <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000E0000005F005200650066003100340033003500320035003500340033000000</w:data></xml><![endif]--></span><!--[if supportFields]><span style='font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast'><span style='mso-element:field-end'></span></span><![endif]--><span style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast">所示</span><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;">“教育软件框架与案例”</span><span lang="ZH-CN" style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast">中</span><span style="font-size:10.0pt;font-family:宋体;mso-ascii-theme-font:minor-fareast;mso-fareast-theme-font:minor-fareast;mso-hansi-theme-font:minor-fareast">,<span lang="ZH-CN">涉及“客户端</span>MVC(<span lang="ZH-CN">架构</span>/<span lang="ZH-CN">模式</span>/<span lang="ZH-CN">关系</span>/<span lang="ZH-CN">结构</span>)<span lang="ZH-CN">、互动</span>MVC(<span lang="ZH-CN">架构</span>/<span lang="ZH-CN">模式</span>/<span lang="ZH-CN">关系</span>/<span lang="ZH-CN">结构</span>)<span lang="ZH-CN">、服务端</span>MVC(<span lang="ZH-CN">架构</span>/<span lang="ZH-CN">模式</span>/<span lang="ZH-CN">关系</span>/<span lang="ZH-CN">结构</span>)<span lang="ZH-CN">”。在此面向对象地探究对象类型的结构。</span></span><o:p></o:p></p><p class="MsoNormal" style="layout-grid-mode:char"><span style="font-size:10.0pt;  font-family:宋体;color:black">“对象类型的结构”是“对象类型的属性方法”的进一步抽象，是读增改删视角的属性读写、方法输入输出。结构分为线性结构、树型结构、网状结构。</span></p>  <p class="MsoListParagraph" align="center" style="text-align:center;layout-grid-mode:  char"><span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Calibri&quot;,sans-serif;  color:black"><img width="110" height="103" src="1690396250722.files/image001.png">&nbsp;  <img width="103" height="96" src="1690396250722.files/image002.png">&nbsp;&nbsp;<img width="110" height="96" src="1690396250722.files/image003.png"></span></p>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span lang="EN-US" style="font-size:9.0pt;color:black">(a)</span><span style="font-size:9.0pt;font-family:宋体;color:black">线性结构</span><span style="font-size:9.0pt;color:black"> <span lang="EN-US">&nbsp;&nbsp;&nbsp;(b)</span></span><span style="font-size:9.0pt;font-family:宋体;color:black">树型结构</span><span style="font-size:9.0pt;color:black"> &nbsp;<span lang="EN-US">&nbsp;&nbsp;&nbsp;(c)</span></span><span style="font-size:9.0pt;font-family:宋体;color:black">网状结构</span></p>  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="color:black">初创方的<span lang="EN-US">.Net</span>内置有部分基础的结构相关的对象类型。</span></p>  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="color:black">初创方的<span lang="EN-US">.Net</span>平台<span lang="EN-US">C#</span>语言的<span lang="EN-US">LINQ </span>语句，便于快捷读增改删结构</span><sup><span lang="EN-US" style="color:black">[</span><a href="#_edn1" name="_ednref1" title=""><span class="MsoEndnoteReference"><span lang="EN-US" style="color:black"><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:12.0pt;  font-family:宋体;color:black">[i]</span></span></span></span></a></sup><sup><span lang="EN-US" style="color:black">]</span></sup><span style="color:black">。</span></p>  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="color:black">他创方的<span lang="EN-US">.Net</span>平台<span lang="EN-US">EF</span>子平台<span lang="EN-US">SQL</span>语言<span lang="EN-US">→(</span>映射<span lang="EN-US">)→SS</span>宿主<span lang="EN-US">SQL</span>语言</span><sup><span lang="EN-US" style="color:black">[</span><a href="#_edn2" name="_ednref2" title=""><span class="MsoEndnoteReference"><span lang="EN-US" style="color:black"><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:12.0pt;font-family:宋体;color:black">[ii]</span></span></span></span></a></sup><sup><span lang="EN-US" style="color:black">]</span></sup><span style="color:black">。</span></p>  <p class="MsoListParagraph" style="margin-left:22.7pt;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-size:11.0pt;font-family:  Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span></span><span style="color:black">此外，初创方的<span lang="EN-US">.Net</span>内置了支持标准化的各种平台支持的</span><span style="color:black">对象类型的结构语言：线性结构的<span lang="EN-US">CSV</span>、树型结构的<span lang="EN-US">XML/JSON</span>、网状结构的<span lang="EN-US">RDF</span></span><span style="color:black">（参见</span><span style="color:black">附录<span lang="EN-US">D</span></span><span style="color:  black">）</span></p>  </td> </tr> <tr style="height:153.6pt">  <td width="28" rowspan="2" valign="top" style="width:21.05pt;border:solid windowtext 1.0pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:153.6pt">  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:9.0pt;font-family:宋体">线性结构</span><span style="font-size:  9.0pt"> </span></p>  </td>  <td width="595" valign="top" style="width:446.5pt;border-top:none;border-left:  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;  padding:0cm 5.4pt 0cm 5.4pt;height:153.6pt">  <p class="MsoNormal" style="layout-grid-mode:char"><span style="font-size:10.0pt;  font-family:宋体">线性结构反映了对象之间一对一的前后次序关系。线性结构中存在唯一的一个“第一对象”。线性结构中存在唯一的一个“最后对象”。除最后一个对象之外，均有唯一的后继对象。除第一个对象之外，均有唯一的前驱对象。</span></p>  <p class="MsoNormal"></p>  <p class="MsoNormal" style="layout-grid-mode:char"><span style="font-size:10.0pt;  font-family:宋体">示例 </span><span lang="EN-US" style="font-size:10.0pt">5‑1</span><span style="font-size:10.0pt;font-family:宋体">是自定义类型实现线形结构的一个实例<span lang="EN">(</span></span><span style="font-size:10.0pt;font-family:宋体">该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryLinearStructureByCustomClass.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/TryLinearStructureByCustomClass</span><span style="font-size:10.0pt;font-family:宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:宋体">图</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑17</span></span><span style="font-size:  10.0pt;font-family:宋体">所示。如果履约</span><span lang="EN-US" style="font-size:10.0pt">interface</span><span style="font-size:10.0pt;font-family:宋体">对象类型</span><span lang="EN-US" style="font-size:10.0pt">System.IQueriable</span><span style="font-size:10.0pt;  font-family:宋体">，则可</span><span lang="EN-US" style="font-size:10.0pt">C#</span><span style="font-size:10.0pt;font-family:宋体">语言的</span><span lang="EN-US" style="font-size:10.0pt">LINQ </span><span style="font-size:10.0pt;  font-family:宋体">语句快捷读增改删线性结构。</span></p>  <p class="MsoCaption" style="text-indent:0cm;layout-grid-mode:char"><a name="_Toc386143248"></a><a name="_Ref382304974"><span lang="EN-US">&nbsp;</span></a></p>  <p class="MsoCaption" align="center" style="text-align:center;layout-grid-mode:  char"><span style="font-family:黑体">示例</span> <span lang="EN-US">5</span><span lang="EN-US">‑</span><span lang="EN-US">1</span><span lang="EN-US"> </span><span style="font-family:黑体">对象类型的结构：线性结构</span><span lang="EN-US">(</span><span style="font-family:黑体">自定义类型实现</span><span lang="EN-US">)</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr>    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt">    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">using System;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">using System.Web.Mvc;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">namespace EDSS.Controllers</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">{</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; public class    TryLinearStructureByCustomClassController : Controller</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LinkList&lt;String&gt; linkList=new    LinkList&lt;string&gt;();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; linkList.Add("</span><span style="font-size:9.0pt;font-family:宋体">您好</span><span lang="EN-US" style="font-size:9.0pt">,");</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; linkList.Add("</span><span style="font-size:9.0pt;font-family:宋体">欢迎您</span><span lang="EN-US" style="font-size:9.0pt">!");</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; linkList.Add("</span><span style="font-size:9.0pt;font-family:宋体">感谢您</span><span lang="EN-US" style="font-size:9.0pt">!");</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.Content("</span><span style="font-size:9.0pt;font-family:宋体">当前链表式线性结构含有对象个数是</span><span lang="EN-US" style="font-size:9.0pt">:"+linkList.Count().ToString()</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +";"+"</span><span style="font-size:9.0pt;font-family:宋体">第一个对象的值是</span><span lang="EN-US" style="font-size:9.0pt">:"+linkList.GetElem(0)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + ";" + "</span><span style="font-size:9.0pt;font-family:宋体">第二个对象的值是</span><span lang="EN-US" style="font-size:9.0pt">:" + linkList.GetElem(1)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + ";" + "</span><span style="font-size:9.0pt;font-family:宋体">第三个对象的值是</span><span lang="EN-US" style="font-size:9.0pt">:" + linkList.GetElem(2)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + ";" + "</span><span style="font-size:9.0pt;font-family:宋体">您还可以试验</span><span lang="EN-US" style="font-size:9.0pt">linkList.Delete()</span><span style="font-size:    9.0pt;font-family:宋体">方法删除线性结构中的对象等功能</span><span lang="EN-US" style="font-size:9.0pt">"</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + ";" + "</span><span style="font-size:9.0pt;font-family:宋体">您还可以尝试为</span><span lang="EN-US" style="font-size:9.0pt">linkList</span><span style="font-size:9.0pt;    font-family:宋体">定义更多的属性方法</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">实现更多的线性结构功能</span><span lang="EN-US" style="font-size:9.0pt">"</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; public class Node&lt;T&gt;//</span><span style="font-size:9.0pt;font-family:宋体">线性结构中对象的类型</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private T DataTemp { set; get; } //</span><span style="font-size:9.0pt;font-family:宋体">临时的自身</span><span lang="EN-US" style="font-size:9.0pt">.</span><span style="font-size:9.0pt;font-family:    宋体">构造方法为其赋值</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">然后可转换为</span><span lang="EN-US" style="font-size:9.0pt">Data.</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Node&lt;T&gt; NextTemp { set; get;    } //</span><span style="font-size:9.0pt;font-family:宋体">临时的引用后一对象</span><span lang="EN-US" style="font-size:9.0pt">.</span><span style="font-size:9.0pt;    font-family:宋体">构造方法为其赋值</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">然后可转换为</span><span lang="EN-US" style="font-size:9.0pt">Next</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public T Data//</span><span style="font-size:9.0pt;font-family:宋体">自身</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return DataTemp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { DataTemp = value; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node&lt;T&gt; Next//</span><span style="font-size:9.0pt;font-family:宋体">引用后一对象</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return NextTemp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { NextTemp = value; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node(T data, Node&lt;T&gt; next)//</span><span style="font-size:9.0pt;font-family:宋体">构造方法</span><span lang="EN-US" style="font-size:9.0pt">(</span><span style="font-size:9.0pt;font-family:    宋体">既有自身</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">又有引用后一对象</span><span lang="EN-US" style="font-size:9.0pt">)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.DataTemp = data;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.NextTemp = next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node(T data)//</span><span style="font-size:9.0pt;font-family:宋体">构造方法</span><span lang="EN-US" style="font-size:9.0pt">(</span><span style="font-size:9.0pt;font-family:    宋体">只有自身</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">没有引用后一对象</span><span lang="EN-US" style="font-size:9.0pt">)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.DataTemp= data;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.NextTemp= null;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node()//</span><span style="font-size:9.0pt;font-family:宋体">构造方法</span><span lang="EN-US" style="font-size:9.0pt">(</span><span style="font-size:9.0pt;font-family:    宋体">只有默认的自身</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">没有引用后一对象</span><span lang="EN-US" style="font-size:9.0pt">)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.DataTemp = default(T);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.NextTemp = null;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public class LinkList&lt;T&gt; //</span><span style="font-size:9.0pt;font-family:宋体">线性结构</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Node&lt;T&gt; HeadTemp { set; get;    } //</span><span style="font-size:9.0pt;font-family:宋体">临时的线性结构头</span><span lang="EN-US" style="font-size:9.0pt">.</span><span style="font-size:9.0pt;    font-family:宋体">构造方法为其赋值</span><span lang="EN-US" style="font-size:9.0pt">,</span><span style="font-size:9.0pt;font-family:宋体">然后可转换为</span><span lang="EN-US" style="font-size:9.0pt">Head.</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node&lt;T&gt; Head</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get{&nbsp; return HeadTemp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set{ HeadTemp = value;}</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public LinkList()//</span><span style="font-size:9.0pt;font-family:宋体">构造方法</span><span style="font-size:    9.0pt"> </span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HeadTemp = null;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Int32 Count()</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; p = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Int32 len = 0;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (p != null)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ++len;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return len;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Clear() //</span><span style="font-size:9.0pt;font-family:宋体">清空线性结构</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HeadTemp = null;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public bool IsEmpty() //</span><span style="font-size:9.0pt;font-family:宋体">判断线性结构是否为空</span><span style="font-size:9.0pt"> </span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (HeadTemp == null)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Add(T item)//</span><span style="font-size:9.0pt;font-family:宋体">在线性结构的末尾添加新对象</span><span style="font-size:9.0pt"> </span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; q = new    Node&lt;T&gt;(item);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; p = new Node&lt;T&gt;();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (HeadTemp == null)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HeadTemp = q;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (p.Next != null)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.Next = q;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Insert(T item, Int32 i)//</span><span style="font-size:9.0pt;font-family:宋体">在线性结构的第</span><span lang="EN-US" style="font-size:9.0pt">i</span><span style="font-size:9.0pt;font-family:    宋体">个结点的位置前插入一个值为</span><span lang="EN-US" style="font-size:9.0pt">item</span><span style="font-size:9.0pt;font-family:宋体">的对象</span><span style="font-size:    9.0pt"> </span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsEmpty() || i &lt; 1)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return; </span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i == 1)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; q = new    Node&lt;T&gt;(item);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.Next = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HeadTemp = q;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; p = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; r = new Node&lt;T&gt;();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Int32 j = 1;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (p.Next != null &amp;&amp; j &lt;    i)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r = p;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ++j;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (j == i)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; q = new    Node&lt;T&gt;(item);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.Next = p;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r.Next = q;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public T Delete(Int32 i)//</span><span style="font-size:9.0pt;font-family:宋体">删除线性结构中的第</span><span lang="EN-US" style="font-size:9.0pt">i</span><span style="font-size:9.0pt;font-family:    宋体">个对象</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsEmpty() || i &lt; 0)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return default(T);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; q = new Node&lt;T&gt;();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i == 1)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HeadTemp = HeadTemp.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return q.Data;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; p = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Int32 j = 1;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (p.Next != null &amp;&amp; j &lt;    i)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ++j;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q = p;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (j == i)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.Next = p.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return p.Data;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return default(T);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public T GetElem(Int32 iTemp) //</span><span style="font-size:9.0pt;font-family:宋体">获得线性结构中的第</span><span lang="EN-US" style="font-size:9.0pt">i</span><span style="font-size:9.0pt;font-family:    宋体">个对象</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Int32 i = 0;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = iTemp+1;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsEmpty())</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return default(T); </span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node&lt;T&gt; p = new Node&lt;T&gt;();</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = HeadTemp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Int32 j = 1;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (p.Next != null &amp;&amp; j &lt;    i)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ++j;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p.Next;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (j == i)</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return p.Data;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return default(T);</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:9.0pt">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span lang="EN-US" style="font-size:10.0pt"><img width="255" height="161" id="Picture 12" src="1690396250722.files/image004.jpg"></span><span lang="EN-US" style="font-size:10.0pt">&nbsp; </span><a name="_MON_1456046479"></a><a name="_MON_1456407933"></a><a name="_MON_1456491002"></a><a name="_MON_1456827428"></a><a name="_MON_1457165898"></a><a name="_MON_1457613034"></a><a name="_MON_1457683757"></a><a name="_MON_1457779578"></a><a name="_MON_1457864458"></a><a name="_MON_1458127352"></a><a name="_MON_1458199538"></a><a name="_MON_1458219108"></a><a name="_MON_1458289718"></a><a name="_MON_1458377142"></a><a name="_MON_1458399407"></a><a name="_MON_1459687874"></a><a name="_MON_1456043465"></a><a name="_MON_1456043701"></a><span lang="EN-US"><img width="227" height="41" src="1690396250722.files/image005.png"></span></p>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span style="font-size:9.0pt;font-family:宋体">（</span><span lang="EN-US" style="font-size:9.0pt">a</span><span style="font-size:9.0pt;font-family:  宋体">）运行结果</span><span lang="EN-US" style="font-size:9.0pt">&nbsp; </span><span style="font-size:9.0pt;font-family:宋体">（</span><span lang="EN-US" style="font-size:9.0pt">b</span><span style="font-size:9.0pt;font-family:  宋体">）运行结果的模型表述</span></p>  <p class="MsoCaption" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc386143108"></a><a name="_Toc145147472"></a><a name="_Ref382304975"><span style="font-family:黑体">图</span> </a><span lang="EN-US">5</span><span lang="EN-US">‑</span><span lang="EN-US">17</span><span lang="EN-US"> </span><span style="font-family:黑体">自定义类型实现</span><span style="font-family:黑体">线性</span><span style="font-family:黑体">结构的运行示例</span></p>  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span lang="EN-US" style="font-size:10.0pt;color:red">&nbsp;</span></p>  </td> </tr> <tr>  <td width="595" valign="top" style="width:446.5pt;border-top:none;border-left:  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;  padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:黑体">初创方的<span lang="EN-US">.Net</span>内置的<span lang="EN-US">System.Array</span>阵列<span lang="EN-US">/System.CollectionBase</span>集合</span><span style="font-size:10.0pt;font-family:黑体">。</span></p>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc145147438"><span style="font-size:10.0pt;  font-family:黑体">表 </span></a><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">5</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">‑</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">8</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体"> &nbsp;</span><a name="_Ref144161829"><span style="font-size:10.0pt;font-family:黑体">初创方的<span lang="EN-US">.Net</span>内置的<span lang="EN-US">System.Array</span>阵列<span lang="EN-US">/System.CollectionBase</span>集合</span></a></p>  <div align="center">  <table class="MsoTableGrid" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr>    <td width="604" valign="top" style="width:453.35pt;border:dashed windowtext 1.0pt;    padding:0cm 5.4pt 0cm 5.4pt">    <p class="MsoNormal" style="margin-bottom:6.0pt;text-indent:0cm;layout-grid-mode:    char"><b><span lang="EN-US" style="font-size:11.0pt">System.Array</span></b></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">初创方</span><span lang="EN-US" style="font-size:10.0pt">.Net</span><span style="font-size:10.0pt;    font-family:宋体">平台的</span><span lang="EN-US" style="font-size:10.0pt">class</span><span style="font-size:10.0pt;font-family:宋体">树体内置</span><span lang="EN-US" style="font-size:10.0pt">System.Array</span><sup><span lang="EN-US" style="font-size:10.0pt">[</span></sup><a href="#_edn3" name="_ednref3" title=""><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:    10.0pt"><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:    10.0pt;font-family:&quot;Times New Roman&quot;,serif">[iii]</span></span></span></span></a><sup><span lang="EN-US" style="font-size:10.0pt">]</span></sup><span style="font-size:    10.0pt;font-family:宋体">，可以直接封装对象类型的线性结构，并且索引编号方式地读增改删。</span></p>    </td>   </tr>   <tr>    <td width="604" valign="top" style="width:453.35pt;border:dashed windowtext 1.0pt;    border-top:none;padding:0cm 5.4pt 0cm 5.4pt">    <p class="MsoNormal" style="margin-bottom:6.0pt;text-indent:0cm;layout-grid-mode:    char"><b><span lang="EN-US" style="font-size:11.0pt">System.CollectionBase</span></b></p>    <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">初创方</span><span lang="EN-US" style="font-size:10.0pt">.Net</span><span style="font-size:10.0pt;    font-family:宋体">平台的</span><span lang="EN-US" style="font-size:10.0pt">class</span><span style="font-size:10.0pt;font-family:宋体">树体内置</span><span lang="EN-US" style="font-size:10.0pt">System.CollectionBase </span><sup><span lang="EN-US" style="font-size:10.0pt">[</span></sup><a href="#_edn4" name="_ednref4" title=""><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:10.0pt"><span class="MsoEndnoteReference"><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;,serif">[iv]</span></span></span></span></a><sup><span lang="EN-US" style="font-size:10.0pt">]</span></sup><span style="font-size:    10.0pt;font-family:宋体">，可以直接封装对象类型的线性结构，并且逐个迭代地读增改删。</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><span lang="EN-US" style="font-size:12.0pt;font-family:  黑体">&nbsp;&nbsp;&nbsp; </span></p>  </td> </tr> <tr>  <td width="28" valign="top" style="width:21.05pt;border:solid windowtext 1.0pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:9.0pt;font-family:宋体">树型结构</span></p>  </td>  <td width="595" valign="top" style="width:446.5pt;border-top:none;border-left:  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;  padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoNormal" style="layout-grid-mode:char"><span style="font-size:10.0pt;  font-family:宋体">树型结构可以看作是线性结构的进一步复杂化，反映了对象之间一对多的层级关系。树的根结点没有前驱结点，除根结点之外的所有结点有且只有一个前驱结点。树中的所有结点都可以有零个或多个后继结点<span lang="EN">(</span>这些节点其实也就是一个线性结构<span lang="EN">,</span>体现了树型结构是线性结构的复杂化<span lang="EN">)</span>。</span></p>  <p class="MsoNormal" style="layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">示例</span><span style="font-size:10.0pt"> <span lang="EN-US">5</span><span lang="EN-US">‑2</span></span><span style="font-size:  10.0pt;font-family:宋体">是自定义类型实现树型结构的一个实例<span lang="EN">(</span></span><span style="font-size:10.0pt;font-family:宋体">该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryTreeStructureByCustomClass.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/  TryTreeStructureByCustomClass</span><span style="font-size:10.0pt;font-family:  宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:宋体">图</span><span style="font-size:10.0pt">  <span lang="EN-US">5</span><span lang="EN-US">‑18</span></span><span style="font-size:10.0pt;font-family:宋体">所示。如果履约</span><span lang="EN-US" style="font-size:10.0pt">interface</span><span style="font-size:10.0pt;  font-family:宋体">对象类型</span><span lang="EN-US" style="font-size:10.0pt">System.IQueriable</span><span style="font-size:10.0pt;font-family:宋体">，则可</span><span lang="EN-US" style="font-size:10.0pt">C#</span><span style="font-size:10.0pt;font-family:  宋体">语言的</span><span lang="EN-US" style="font-size:10.0pt">LINQ </span><span style="font-size:10.0pt;font-family:宋体">语句快捷读增改删树型结构。</span></p>  <p class="MsoCaption" style="layout-grid-mode:char"><a name="_Toc386143250"></a><a name="_Ref382324832"><span style="font-family:黑体">示例</span> </a><span lang="EN-US">5</span><span lang="EN-US">‑</span><span lang="EN-US">2</span><span lang="EN-US"> . </span><span style="font-family:黑体">对象类型的结构：树型结构（自定义类型实现）</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr>    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt">    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">using System;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">using    System.Collections.Generic;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">using    System.Web.Mvc;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">namespace    EDSS.Controllers.TryTreeStructureByCustomClass</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">{</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; public    class TryTreeStructureByCustomClassController : Controller</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    public ContentResult Index()</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    Node&lt;String&gt; root = new Node&lt;String&gt;("A");&nbsp; </span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children.Add(new Node&lt;String&gt;("B"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children.Add(new Node&lt;String&gt;("C"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children.Add(new Node&lt;String&gt;("D"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children[0].children.Add(new Node&lt;String&gt;("B1"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children[1].children.Add(new Node&lt;String&gt;("C1"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children[1].children.Add(new    Node&lt;String&gt;("C2"));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children[2].children.Add(new Node&lt;String&gt;("D1"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    root.children[2].children.Add(new Node&lt;String&gt;("D2"));</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    String stringTempRoot = "";</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    if (root.children.Count != 0)</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    foreach (Node&lt;String&gt; node in root.children)</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    stringTempRoot = stringTempRoot + node.Name + "</span><span style="font-size:9.0pt;font-family:宋体">、</span><span lang="EN-US" style="font-size:9.0pt">";</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    String stringTempRootNextHierarchy = "";</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    foreach (Node&lt;String&gt; node in root.children)</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    foreach (Node&lt;String&gt; nodeTemp in node.children)</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    stringTempRootNextHierarchy = stringTempRootNextHierarchy + nodeTemp.Name +    "</span><span style="font-size:9.0pt;font-family:宋体">、</span><span lang="EN-US" style="font-size:9.0pt">";</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    return this.Content(</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    "</span><span style="font-size:9.0pt;font-family:宋体">根对象是</span><span lang="EN-US" style="font-size:9.0pt">:" + root.Name + ";</span><span style="font-size:9.0pt;font-family:宋体">根对象</span><span lang="EN-US" style="font-size:9.0pt">" + root.Name + "</span><span style="font-size:9.0pt;font-family:宋体">下一层次包含的对象有</span><span lang="EN-US" style="font-size:9.0pt">:" +stringTempRoot </span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    + ";</span><span style="font-size:9.0pt;font-family:宋体">再下一层次包含的对象有</span><span lang="EN-US" style="font-size:9.0pt">:" +    stringTempRootNextHierarchy+";"</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    );</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; public    class Node&lt;T&gt;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    public T Name{set;get;}</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    public List&lt;Node&lt;T&gt;&gt; children = new    List&lt;Node&lt;T&gt;&gt;();</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    public Node(T value)</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    this.Name = value;</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="MsoNormal" align="left" style="text-align:left;layout-grid-mode:char;    text-autospace:none"><span lang="EN-US" style="font-size:9.0pt">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span lang="EN-US" style="font-size:10.0pt"><img width="269" height="133" id="Picture 15" src="1690396250722.files/image006.jpg"></span><span lang="EN-US" style="font-size:10.0pt">&nbsp;</span><a name="_MON_1458219110"></a><a name="_MON_1458289720"></a><a name="_MON_1458377145"></a><a name="_MON_1458399409"></a><a name="_MON_1459687876"></a><a name="_MON_1456046480"></a><a name="_MON_1456407934"></a><a name="_MON_1456491003"></a><a name="_MON_1456827430"></a><a name="_MON_1457165899"></a><a name="_MON_1457293895"></a><a name="_MON_1457344765"></a><a name="_MON_1457344962"></a><a name="_MON_1457433880"></a><a name="_MON_1457448883"></a><a name="_MON_1457449147"></a><a name="_MON_1457449186"></a><a name="_MON_1457449216"></a><a name="_MON_1457449259"></a><a name="_MON_1457449303"></a><a name="_MON_1457549031"></a><a name="_MON_1457613036"></a><a name="_MON_1457683759"></a><a name="_MON_1457779580"></a><a name="_MON_1457864460"></a><a name="_MON_1458127354"></a><span lang="EN-US"><img width="233" height="123" src="1690396250722.files/image007.png"></span></p>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span style="font-size:9.0pt;font-family:宋体">（</span><span lang="EN-US" style="font-size:9.0pt">a</span><span style="font-size:9.0pt;font-family:  宋体">）运行结果</span><span lang="EN-US" style="font-size:9.0pt">&nbsp; </span><span style="font-size:9.0pt;font-family:宋体">（</span><span lang="EN-US" style="font-size:9.0pt">b</span><span style="font-size:9.0pt;font-family:  宋体">）运行结果的模型表述</span></p>  <p class="MsoCaption" align="center" style="text-align:center;text-indent:0cm;  layout-grid-mode:char"><a name="_Toc386143110"></a><a name="_Toc145147473"></a><a name="_Ref382324912"><span style="font-family:黑体">图</span> </a><span lang="EN-US">5</span><span lang="EN-US">‑</span><span lang="EN-US">18</span><span lang="EN-US"> </span><span style="font-family:黑体">自定义类型实现</span><span style="font-family:黑体">树型</span><span style="font-family:黑体">结构的运行示例</span></p>  <p class="MsoListParagraph" style="layout-grid-mode:char"><span lang="EN" style="font-size:11.0pt">&nbsp;</span></p>  </td> </tr> <tr>  <td width="28" valign="top" style="width:21.05pt;border:solid windowtext 1.0pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoNormal" style="text-indent:0cm;layout-grid-mode:char"><span style="font-size:9.0pt;font-family:宋体">网状结构</span></p>  </td>  <td width="595" valign="top" style="width:446.5pt;border-top:none;border-left:  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;  padding:0cm 5.4pt 0cm 5.4pt">  <p class="MsoNormal" style="layout-grid-mode:char"><a name="t1"></a><a name="t2"></a><span style="font-size:10.0pt;font-family:宋体">网状结构（又常称为图形结构）可以看作是树型结构的进一步复杂化，反映了对象之间多对多的关系。网状结构是是最复杂的结构，顶点之间是多对多的边线关系，即任意两个顶点之间都允许存在关系。</span></p>  <p class="MsoNormal" style="layout-grid-mode:char"><span style="font-size:10.0pt;font-family:宋体">示例</span><span style="font-size:10.0pt;  font-family:黑体"> <span lang="EN-US">5</span><span lang="EN-US">‑3</span></span><span style="font-size:10.0pt;font-family:宋体">是自定义类型实现网状结构的一个实例<span lang="EN">(</span></span><span style="font-size:10.0pt;font-family:宋体">该示例对应</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案中</span><span lang="EN-US" style="font-size:10.0pt">EDSS/Controlls/Samples/TryNetworkStructureByCustomClass.cs</span><span style="font-size:10.0pt;font-family:宋体">文件），运行</span><span lang="EN-US" style="font-size:10.0pt">EDSS</span><span style="font-size:10.0pt;font-family:  宋体">解决方案，浏览器地址栏中键入</span><span lang="EN-US" style="font-size:10.0pt">http://localhost:21138/TryNetworkStructureByCustomClass</span><span style="font-size:10.0pt;font-family:宋体">将运行该示例如</span><span style="font-size:10.0pt;font-family:黑体">图 <span lang="EN-US">5</span><span lang="EN-US">‑19</span></span><span style="font-size:10.0pt;font-family:宋体">所示。如果履约</span><span lang="EN-US" style="font-size:10.0pt">interface</span><span style="font-size:  10.0pt;font-family:宋体">对象类型</span><span lang="EN-US" style="font-size:10.0pt">System.IQueriable</span><span style="font-size:10.0pt;font-family:宋体">，则可</span><span lang="EN-US" style="font-size:10.0pt">C#</span><span style="font-size:10.0pt;font-family:  宋体">语言的</span><span lang="EN-US" style="font-size:10.0pt">LINQ </span><span style="font-size:10.0pt;font-family:宋体">语句快捷读增改删网状结构（</span><span lang="EN-US" style="font-size:10.0pt">.Net</span><span style="font-size:10.0pt;font-family:  宋体">当前还没有内置网状结构相关的类型，虽然内置有线性结构、树型结构相关的类型）。</span></p>  <p class="MsoCaption" style="text-indent:0cm;layout-grid-mode:char"><a name="_Toc386143252"></a><a name="_Ref383553283"><span style="font-family:  黑体">示例 </span></a><span lang="EN-US" style="font-family:黑体">5</span><span lang="EN-US" style="font-family:黑体">‑</span><span lang="EN-US" style="font-family:黑体">3</span><span lang="EN-US" style="font-family:  黑体"> </span><span style="font-family:黑体">对象类型的结构：网状结构（自定义类型实现，<span lang="EN-US">.Net</span>尚未内置网状结构相关的类型）</span></p>  <div align="center">  <table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none">   <tbody><tr>    <td width="559" valign="top" style="width:419.05pt;border-top:dashed windowtext 1.0pt;    border-left:none;border-bottom:dashed windowtext 1.0pt;border-right:none;    padding:0cm 5.4pt 0cm 5.4pt">    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System.Collections.Generic;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">using System.Web.Mvc;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">namespace EDSS.Controllers.TryNetworkStructureByCustomClass</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">{</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class TryNetworkStructureByCustomClassController :    Controller</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public ContentResult Index()</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NetworkStructure&lt;String&gt; networkStructure =    new NetworkStructure&lt;String&gt;(4);</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddVertex("A");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddVertex("B");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddVertex("C");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddVertex("D");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;networkStructure.AddEdge("A",    "B");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddEdge("A",    "C");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddEdge("A",    "D");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; networkStructure.AddEdge("B",    "C");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string stringTemp = "";</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach    (NetworkStructure&lt;String&gt;.Vertex&lt;String&gt; vertex in    networkStructure.vertexs)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stringTemp = stringTemp +    vertex.Value.ToString() + ":";</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (vertex.FirstEdge != null)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NetworkStructure&lt;String&gt;.Node nodeTemp    = vertex.FirstEdge;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (nodeTemp != null)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stringTemp = stringTemp +    nodeTemp.AdjacentVertex.Value.ToString();</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nodeTemp = nodeTemp.Next;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stringTemp= stringTemp+"; ";</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.Content(stringTemp);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; public class NetworkStructure&lt;T&gt;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;public class Node</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Vertex&lt;T&gt; AdjacentVertex { set; get; } </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node Next { set; get; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang="PT-BR">public Node(Vertex&lt;T&gt;    vertex)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="PT-BR">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="PT-BR">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AdjacentVertex = vertex;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="PT-BR">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang="EN-US">}</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;public class Vertex&lt;TValue&gt;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public TValue Value { set; get; } </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Node FirstEdge { set; get; } </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Boolean Visited { set; get; } </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Vertex(TValue value)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.Value = value;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public List&lt;Vertex&lt;T&gt;&gt; vertexs { set; get; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public NetworkStructure(Int32 vertexs)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.vertexs = new    List&lt;Vertex&lt;T&gt;&gt;(vertexs);</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void AddVertex(T vertex) </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (Contains(vertex))</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new ArgumentException("</span>插入了重复的顶点！<span lang="EN-US">");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vertexs.Add(new Vertex&lt;T&gt;(vertex));</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void AddEdge(T from, T to) </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Vertex&lt;T&gt; fromVertex = Find(from); </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (fromVertex == null)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new ArgumentException("</span>起始顶点并不存在！<span lang="EN-US">");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Vertex&lt;T&gt; toVertex = Find(to); </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (toVertex == null)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new ArgumentException("</span>结束顶点并不存在！<span lang="EN-US">");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AddDirectedEdge(fromVertex, toVertex);</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddDirectedEdge(toVertex, fromVertex);</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Boolean Contains(T vertex) </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (Vertex&lt;T&gt; vertexTemp in vertexs)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (vertexTemp.Value.Equals(vertex))</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Vertex&lt;T&gt; Find(T vertex) </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (Vertex&lt;T&gt; vertexTemp in vertexs)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (vertexTemp.Value.Equals(vertex))</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return vertexTemp;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;private void AddDirectedEdge(Vertex&lt;T&gt; fromVertex,    Vertex&lt;T&gt; toVertex)</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (fromVertex.FirstEdge == null) </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fromVertex.FirstEdge = new Node(toVertex);</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node nodeTemp = fromVertex.FirstEdge;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node node = fromVertex.FirstEdge;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if    (node.AdjacentVertex.Value.Equals(toVertex.Value))</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new ArgumentException("</span>添加了重复的边！<span lang="EN-US">");</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nodeTemp = node;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node = node.Next;</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } while (node != null);</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nodeTemp.Next = new Node(toVertex); </span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">&nbsp;&nbsp;&nbsp; }</span></p>    <p class="a" style="margin-left:21.0pt;text-indent:0cm;layout-grid-mode:char"><span lang="EN-US">}</span></p>    </td>   </tr>  </tbody></table>  </div>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span lang="EN-US" style="font-size:10.0pt;font-family:宋体"><img width="207" height="131" id="Picture 17" src="1690396250722.files/image008.jpg"></span><span lang="EN-US" style="font-size:10.0pt">&nbsp; </span><a name="_MON_1458199543"></a><a name="_MON_1458219112"></a><a name="_MON_1458289722"></a><a name="_MON_1458377147"></a><a name="_MON_1458399411"></a><a name="_MON_1459687878"></a><a name="_MON_1457548923"></a><a name="_MON_1457549035"></a><a name="_MON_1457549118"></a><a name="_MON_1457613039"></a><a name="_MON_1457683761"></a><a name="_MON_1457779583"></a><a name="_MON_1457864462"></a><span lang="EN-US"><img width="213" height="82" src="1690396250722.files/image009.png"></span></p>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><span style="font-size:9.0pt;font-family:宋体">（</span><span lang="EN-US" style="font-size:9.0pt">a</span><span style="font-size:9.0pt;font-family:  宋体">）运行结果</span><span lang="EN-US" style="font-size:9.0pt">&nbsp; </span><span style="font-size:9.0pt;font-family:宋体">（</span><span lang="EN-US" style="font-size:9.0pt">b</span><span style="font-size:9.0pt;font-family:  宋体">）运行结果的模型表述</span></p>  <p class="MsoNormal" align="center" style="text-align:center;layout-grid-mode:  char"><a name="_Toc386143112"></a><a name="_Toc145147474"></a><a name="_Ref383708295"><span style="font-size:10.0pt;font-family:黑体">图 </span></a><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">5</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">‑</span><span lang="EN-US" style="font-size:10.0pt;font-family:黑体">19</span><span style="font-size:10.0pt;font-family:宋体">网状结构</span><span style="font-size:  10.0pt;font-family:黑体">的运行结果示例</span></p>  </td> </tr></tbody></table></div><p class="MsoListParagraph" style="layout-grid-mode:char"><span lang="EN-US" style="font-size:11.0pt">&nbsp;</span></p><p class="MsoNormal" style="text-indent:0cm"><span lang="EN-US">&nbsp;</span></p></div><div><br clear="all"><hr align="left" size="1" width="33%"><div id="edn1"><p class="MsoNormal" style="text-indent:0cm;word-break:break-all"><a href="#_ednref1" name="_edn1" title=""></a><span lang="EN-US" style="font-size:9.0pt">[<span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Times New Roman&quot;,serif">[i]</span>]</span><span lang="EN-US"><a href="https://learn.microsoft.com/en-us/dotnet/csharp/linq/"><span style="font-size:9.0pt;font-family:楷体">https://learn.microsoft.com/en-us/dotnet/csharp/linq/</span></a></span></p></div><div id="edn2"><p class="MsoNormal" style="text-indent:0cm;word-break:break-all"><a href="#_ednref2" name="_edn2" title=""></a><span lang="EN-US" style="font-size:9.0pt">[<span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Times New Roman&quot;,serif">[ii]</span>]</span><span lang="EN-US"><a href="https://learn.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.relationaldatabasefacadeextensions.executesqlraw?view=efcore-7.0"><span style="font-size:9.0pt;font-family:楷体">https://learn.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.relationaldatabasefacadeextensions.executesqlraw?view=efcore-7.0</span></a></span></p></div><div id="edn3"><p class="MsoNormal" align="left" style="margin-left:18.0pt;text-align:left;text-indent:-18.0pt;word-break:break-all"><a href="#_ednref3" name="_edn3" title=""></a><span lang="EN-US" style="font-size:9.0pt">[<span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Times New Roman&quot;,serif">[iii]</span>] </span><span lang="EN-US"><a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/arrays"><span style="font-size:9.0pt">https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/arrays</span></a></span></p><p class="MsoNormal" align="left" style="margin-left:21.0pt;text-align:left;text-indent:-21.0pt;word-break:break-all"><span lang="EN-US"><a href="https://learn.microsoft.com/en-us/dotnet/api/system.array?view=net-7.0"><span style="font-size:9.0pt">https://learn.microsoft.com/en-us/dotnet/api/system.array?view=net-7.0</span></a></span></p></div><div id="edn4"><p class="MsoNormal" align="left" style="margin-left:18.0pt;text-align:left;text-indent:-18.0pt;word-break:break-all"><a href="#_ednref4" name="_edn4" title=""></a><span lang="EN-US" style="font-size:9.0pt">[<span lang="EN-US" style="font-size:9.0pt;font-family:&quot;Times New Roman&quot;,serif">[iv]</span>] </span><span lang="EN-US"><a href="https://learn.microsoft.com/en-us/dotnet/api/system.collections.collectionbase?view=net-7.0"><span style="font-size:9.0pt">https://learn.microsoft.com/en-us/dotnet/api/system.collections.collectionbase?view=net-7.0</span></a></span></p></div></div><!--右键菜单开始 --><div id="popupDiv" onclick="fnPopupClosePopup();" oncontextmenu="fnPopupContextMenu();" style="position: fixed; z-index: 1000; margin: 2px; border: 1px solid black; overflow: visible; font-size: 11px; cursor: default; display: block; background-color: lightyellow; width: 90px; height: 60px; left: 106px; top: 222px;"><div style="position: relative;" onmouseover="fnPopupMouseOver();" onmouseout="fnPopupMouseOut();"><div title="刷新标题面" onclick="location.reload();" style="color: rgb(0, 0, 0);">刷新</div><div title="单击将在是否可以在线编辑课文的之间切换!" onclick="if(document.body.contentEditable==true) { document.body.contentEditable = false; } else { document.body.contentEditable = true;}" style="color: rgb(0, 0, 0);">课文编辑切换</div><div title="编辑后可保存编辑结果" onclick="fnSave();" style="color: rgb(0, 255, 0);">保存</div><div title="打开帮助文档" onclick="fnHelp();">帮助</div></div></div><!--右键菜单结束--><script id="sIdScriptAutoAddedForDynFunction1" src="../../../../common/script/content.js"></script><script id="sIdScriptAutoAddedForDynFunction2" src="../../../../common/script/Popup.js"></script><script id="sIdScriptAutoAddedForDynFunction3">document.body.onload=fnOnLoad;</script></body></html>